openapi: 3.0.0
info:
  title: Claims API
  description: "Internal PM API for getting Claims and related resources. Additional context. Hello world. Today is Wed "
  contact: {}
  version: v4.0.1
servers:
- url: https://localhost:8080/claim
  variables: {}
paths:
  /Account:
    post:
      tags:
      - Account
      summary: Account
      operationId: Account
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Account
      summary: Account
      operationId: Account
      parameters:
      - name: owner
        in: query
        description: Who is responsible?
        style: form
        explode: true
        schema:
          type: string
      - name: patient
        in: query
        description: What is account tied to?
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: What is account tied to?
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: balance
        in: query
        description: How much is in account?
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: identifier
        in: query
        description: Account number
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: Human-readable label
        style: form
        explode: true
        schema:
          type: string
      - name: period
        in: query
        description: Transaction window
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: status
        in: query
        description: active | inactive | entered-in-error
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: E.g. patient, expense, depreciation
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
                description: Success
      deprecated: false
  /Account/{id}:
    get:
      tags:
      - Account
      summary: AccountById
      operationId: AccountById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
      deprecated: false
    put:
      tags:
      - Account
      summary: AccountById
      operationId: AccountById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Account
      summary: AccountById
      operationId: AccountById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Account/{id}/_history:
    get:
      tags:
      - Account
      summary: AccountHistoryById
      operationId: AccountHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Account/_history:
    get:
      tags:
      - Account
      summary: AccountHistory
      operationId: AccountHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Account/{id}/_history/{vid}:
    get:
      tags:
      - Account
      summary: AccountHistoryByIdAndVid
      operationId: AccountHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
      deprecated: false
  /Claims:
    post:
      tags:
      - Claim
      summary: Claim
      operationId: Claim
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Claim'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Claim
      summary: Claim
      operationId: Claim
      parameters:
      - name: care-team
        in: query
        description: Member of the CareTeam
        style: form
        explode: true
        schema:
          type: string
      - name: encounter
        in: query
        description: Encounters associated with a billed line item
        style: form
        explode: true
        schema:
          type: string
      - name: enterer
        in: query
        description: The party responsible for the entry of the Claim
        style: form
        explode: true
        schema:
          type: string
      - name: facility
        in: query
        description: Facility responsible for the goods and services
        style: form
        explode: true
        schema:
          type: string
      - name: insurer
        in: query
        description: The target payor/insurer for the Claim
        style: form
        explode: true
        schema:
          type: string
      - name: organization
        in: query
        description: The reference to the providing organization
        style: form
        explode: true
        schema:
          type: string
      - name: patient
        in: query
        description: Patient receiving the services
        style: form
        explode: true
        schema:
          type: string
      - name: payee
        in: query
        description: The party receiving any payment for the Claim
        style: form
        explode: true
        schema:
          type: string
      - name: provider
        in: query
        description: Provider responsible for the Claim
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: created
        in: query
        description: The creation date for the Claim
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: The primary identifier of the financial resource
        style: form
        explode: true
        schema:
          type: string
      - name: priority
        in: query
        description: Processing priority requested
        style: form
        explode: true
        schema:
          type: string
      - name: use
        in: query
        description: The kind of financial resource
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Claim'
                description: Success
      deprecated: false
  /Claim/{id}:
    get:
      tags:
      - Claim
      summary: ClaimById
      operationId: ClaimById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Claim'
      deprecated: false
    put:
      tags:
      - Claim
      summary: ClaimById
      operationId: ClaimById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Claim'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Claim
      summary: ClaimById
      operationId: ClaimById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Claim/{id}/_history:
    get:
      tags:
      - Claim
      summary: ClaimHistoryById
      operationId: ClaimHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Claim/_history:
    get:
      tags:
      - Claim
      summary: ClaimHistory
      operationId: ClaimHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Claim/{id}/_history/{vid}:
    get:
      tags:
      - Claim
      summary: ClaimHistoryByIdAndVid
      operationId: ClaimHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Claim'
      deprecated: false
  /ClaimResponse:
    post:
      tags:
      - ClaimResponse
      summary: ClaimResponse
      operationId: ClaimResponse
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClaimResponse'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - ClaimResponse
      summary: ClaimResponse
      operationId: ClaimResponse
      parameters:
      - name: insurer
        in: query
        description: The organization who generated this resource
        style: form
        explode: true
        schema:
          type: string
      - name: patient
        in: query
        description: The subject of care.
        style: form
        explode: true
        schema:
          type: string
      - name: request
        in: query
        description: The claim reference
        style: form
        explode: true
        schema:
          type: string
      - name: request-provider
        in: query
        description: The Provider of the claim
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: created
        in: query
        description: The creation date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: disposition
        in: query
        description: The contents of the disposition message
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: The identity of the claimresponse
        style: form
        explode: true
        schema:
          type: string
      - name: outcome
        in: query
        description: The processing outcome
        style: form
        explode: true
        schema:
          type: string
      - name: payment-date
        in: query
        description: The expected paymentDate
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimResponse'
                description: Success
      deprecated: false
  /ClaimResponse/{id}:
    get:
      tags:
      - ClaimResponse
      summary: ClaimResponseById
      operationId: ClaimResponseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimResponse'
      deprecated: false
    put:
      tags:
      - ClaimResponse
      summary: ClaimResponseById
      operationId: ClaimResponseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClaimResponse'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - ClaimResponse
      summary: ClaimResponseById
      operationId: ClaimResponseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ClaimResponse/{id}/_history:
    get:
      tags:
      - ClaimResponse
      summary: ClaimResponseHistoryById
      operationId: ClaimResponseHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ClaimResponse/_history:
    get:
      tags:
      - ClaimResponse
      summary: ClaimResponseHistory
      operationId: ClaimResponseHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ClaimResponse/{id}/_history/{vid}:
    get:
      tags:
      - ClaimResponse
      summary: ClaimResponseHistoryByIdAndVid
      operationId: ClaimResponseHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimResponse'
      deprecated: false
  /Contract:
    post:
      tags:
      - Contract
      summary: Contract
      operationId: Contract
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contract'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Contract
      summary: Contract
      operationId: Contract
      parameters:
      - name: agent
        in: query
        description: Agent to the Contact
        style: form
        explode: true
        schema:
          type: string
      - name: authority
        in: query
        description: The authority of the contract
        style: form
        explode: true
        schema:
          type: string
      - name: domain
        in: query
        description: The domain of the contract
        style: form
        explode: true
        schema:
          type: string
      - name: patient
        in: query
        description: The identity of the subject of the contract (if a patient)
        style: form
        explode: true
        schema:
          type: string
      - name: signer
        in: query
        description: Contract Signatory Party
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: The identity of the subject of the contract
        style: form
        explode: true
        schema:
          type: string
      - name: term-topic
        in: query
        description: The identity of the topic of the contract terms
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: The identity of the contract
        style: form
        explode: true
        schema:
          type: string
      - name: issued
        in: query
        description: The date/time the contract was issued
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract'
                description: Success
      deprecated: false
  /Contract/{id}:
    get:
      tags:
      - Contract
      summary: ContractById
      operationId: ContractById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'
      deprecated: false
    put:
      tags:
      - Contract
      summary: ContractById
      operationId: ContractById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contract'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Contract
      summary: ContractById
      operationId: ContractById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Contract/{id}/_history:
    get:
      tags:
      - Contract
      summary: ContractHistoryById
      operationId: ContractHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Contract/_history:
    get:
      tags:
      - Contract
      summary: ContractHistory
      operationId: ContractHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Contract/{id}/_history/{vid}:
    get:
      tags:
      - Contract
      summary: ContractHistoryByIdAndVid
      operationId: ContractHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'
      deprecated: false
  /Coverage:
    post:
      tags:
      - Coverage
      summary: Coverage
      operationId: Coverage
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Coverage'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Coverage
      summary: Coverage
      operationId: Coverage
      parameters:
      - name: beneficiary
        in: query
        description: Covered party
        style: form
        explode: true
        schema:
          type: string
      - name: payor
        in: query
        description: The identity of the insurer or party paying for services
        style: form
        explode: true
        schema:
          type: string
      - name: policy-holder
        in: query
        description: Reference to the policyholder
        style: form
        explode: true
        schema:
          type: string
      - name: subscriber
        in: query
        description: Reference to the subscriber
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: class
        in: query
        description: Class identifier
        style: form
        explode: true
        schema:
          type: string
      - name: dependent
        in: query
        description: Dependent number
        style: form
        explode: true
        schema:
          type: string
      - name: group
        in: query
        description: Group identifier
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: The primary identifier of the insured and the coverage
        style: form
        explode: true
        schema:
          type: string
      - name: plan
        in: query
        description: A plan or policy identifier
        style: form
        explode: true
        schema:
          type: string
      - name: sequence
        in: query
        description: Sequence number
        style: form
        explode: true
        schema:
          type: string
      - name: subclass
        in: query
        description: Sub-class identifier
        style: form
        explode: true
        schema:
          type: string
      - name: subgroup
        in: query
        description: Sub-group identifier
        style: form
        explode: true
        schema:
          type: string
      - name: subplan
        in: query
        description: Sub-plan identifier
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: The kind of coverage (health plan, auto, Workers Compensation)
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Coverage'
                description: Success
      deprecated: false
  /Coverage/{id}:
    get:
      tags:
      - Coverage
      summary: CoverageById
      operationId: CoverageById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coverage'
      deprecated: false
    put:
      tags:
      - Coverage
      summary: CoverageById
      operationId: CoverageById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Coverage'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Coverage
      summary: CoverageById
      operationId: CoverageById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Coverage/{id}/_history:
    get:
      tags:
      - Coverage
      summary: CoverageHistoryById
      operationId: CoverageHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Coverage/_history:
    get:
      tags:
      - Coverage
      summary: CoverageHistory
      operationId: CoverageHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Coverage/{id}/_history/{vid}:
    get:
      tags:
      - Coverage
      summary: CoverageHistoryByIdAndVid
      operationId: CoverageHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coverage'
      deprecated: false
  /EligibilityRequest:
    post:
      tags:
      - EligibilityRequest
      summary: EligibilityRequest
      operationId: EligibilityRequest
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EligibilityRequest'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - EligibilityRequest
      summary: EligibilityRequest
      operationId: EligibilityRequest
      parameters:
      - name: enterer
        in: query
        description: The party who is responsible for the request
        style: form
        explode: true
        schema:
          type: string
      - name: facility
        in: query
        description: Facility responsible for the goods and services
        style: form
        explode: true
        schema:
          type: string
      - name: organization
        in: query
        description: The reference to the providing organization
        style: form
        explode: true
        schema:
          type: string
      - name: patient
        in: query
        description: The reference to the patient
        style: form
        explode: true
        schema:
          type: string
      - name: provider
        in: query
        description: The reference to the provider
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: created
        in: query
        description: The creation date for the EOB
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: The business identifier of the Eligibility
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EligibilityRequest'
                description: Success
      deprecated: false
  /EligibilityRequest/{id}:
    get:
      tags:
      - EligibilityRequest
      summary: EligibilityRequestById
      operationId: EligibilityRequestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EligibilityRequest'
      deprecated: false
    put:
      tags:
      - EligibilityRequest
      summary: EligibilityRequestById
      operationId: EligibilityRequestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EligibilityRequest'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - EligibilityRequest
      summary: EligibilityRequestById
      operationId: EligibilityRequestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /EligibilityRequest/{id}/_history:
    get:
      tags:
      - EligibilityRequest
      summary: EligibilityRequestHistoryById
      operationId: EligibilityRequestHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /EligibilityRequest/_history:
    get:
      tags:
      - EligibilityRequest
      summary: EligibilityRequestHistory
      operationId: EligibilityRequestHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /EligibilityRequest/{id}/_history/{vid}:
    get:
      tags:
      - EligibilityRequest
      summary: EligibilityRequestHistoryByIdAndVid
      operationId: EligibilityRequestHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EligibilityRequest'
      deprecated: false
  /EligibilityResponse:
    post:
      tags:
      - EligibilityResponse
      summary: EligibilityResponse
      operationId: EligibilityResponse
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EligibilityResponse'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - EligibilityResponse
      summary: EligibilityResponse
      operationId: EligibilityResponse
      parameters:
      - name: insurer
        in: query
        description: The organization which generated this resource
        style: form
        explode: true
        schema:
          type: string
      - name: request
        in: query
        description: The EligibilityRequest reference
        style: form
        explode: true
        schema:
          type: string
      - name: request-organization
        in: query
        description: The EligibilityRequest organization
        style: form
        explode: true
        schema:
          type: string
      - name: request-provider
        in: query
        description: The EligibilityRequest provider
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: created
        in: query
        description: The creation date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: disposition
        in: query
        description: The contents of the disposition message
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: The business identifier
        style: form
        explode: true
        schema:
          type: string
      - name: outcome
        in: query
        description: The processing outcome
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EligibilityResponse'
                description: Success
      deprecated: false
  /EligibilityResponse/{id}:
    get:
      tags:
      - EligibilityResponse
      summary: EligibilityResponseById
      operationId: EligibilityResponseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EligibilityResponse'
      deprecated: false
    put:
      tags:
      - EligibilityResponse
      summary: EligibilityResponseById
      operationId: EligibilityResponseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EligibilityResponse'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - EligibilityResponse
      summary: EligibilityResponseById
      operationId: EligibilityResponseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /EligibilityResponse/{id}/_history:
    get:
      tags:
      - EligibilityResponse
      summary: EligibilityResponseHistoryById
      operationId: EligibilityResponseHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /EligibilityResponse/_history:
    get:
      tags:
      - EligibilityResponse
      summary: EligibilityResponseHistory
      operationId: EligibilityResponseHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /EligibilityResponse/{id}/_history/{vid}:
    get:
      tags:
      - EligibilityResponse
      summary: EligibilityResponseHistoryByIdAndVid
      operationId: EligibilityResponseHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EligibilityResponse'
      deprecated: false
  /EnrollmentRequest:
    post:
      tags:
      - EnrollmentRequest
      summary: EnrollmentRequest
      operationId: EnrollmentRequest
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrollmentRequest'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - EnrollmentRequest
      summary: EnrollmentRequest
      operationId: EnrollmentRequest
      parameters:
      - name: organization
        in: query
        description: The organization who generated this resource
        style: form
        explode: true
        schema:
          type: string
      - name: patient
        in: query
        description: The party to be enrolled
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: The party to be enrolled
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: The business identifier of the Enrollment
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnrollmentRequest'
                description: Success
      deprecated: false
  /EnrollmentRequest/{id}:
    get:
      tags:
      - EnrollmentRequest
      summary: EnrollmentRequestById
      operationId: EnrollmentRequestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnrollmentRequest'
      deprecated: false
    put:
      tags:
      - EnrollmentRequest
      summary: EnrollmentRequestById
      operationId: EnrollmentRequestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrollmentRequest'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - EnrollmentRequest
      summary: EnrollmentRequestById
      operationId: EnrollmentRequestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /EnrollmentRequest/{id}/_history:
    get:
      tags:
      - EnrollmentRequest
      summary: EnrollmentRequestHistoryById
      operationId: EnrollmentRequestHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /EnrollmentRequest/_history:
    get:
      tags:
      - EnrollmentRequest
      summary: EnrollmentRequestHistory
      operationId: EnrollmentRequestHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /EnrollmentRequest/{id}/_history/{vid}:
    get:
      tags:
      - EnrollmentRequest
      summary: EnrollmentRequestHistoryByIdAndVid
      operationId: EnrollmentRequestHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnrollmentRequest'
      deprecated: false
  /EnrollmentResponse:
    post:
      tags:
      - EnrollmentResponse
      summary: EnrollmentResponse
      operationId: EnrollmentResponse
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrollmentResponse'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - EnrollmentResponse
      summary: EnrollmentResponse
      operationId: EnrollmentResponse
      parameters:
      - name: organization
        in: query
        description: The organization who generated this resource
        style: form
        explode: true
        schema:
          type: string
      - name: request
        in: query
        description: The reference to the claim
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: The business identifier of the EnrollmentResponse
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnrollmentResponse'
                description: Success
      deprecated: false
  /EnrollmentResponse/{id}:
    get:
      tags:
      - EnrollmentResponse
      summary: EnrollmentResponseById
      operationId: EnrollmentResponseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnrollmentResponse'
      deprecated: false
    put:
      tags:
      - EnrollmentResponse
      summary: EnrollmentResponseById
      operationId: EnrollmentResponseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrollmentResponse'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - EnrollmentResponse
      summary: EnrollmentResponseById
      operationId: EnrollmentResponseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /EnrollmentResponse/{id}/_history:
    get:
      tags:
      - EnrollmentResponse
      summary: EnrollmentResponseHistoryById
      operationId: EnrollmentResponseHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /EnrollmentResponse/_history:
    get:
      tags:
      - EnrollmentResponse
      summary: EnrollmentResponseHistory
      operationId: EnrollmentResponseHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /EnrollmentResponse/{id}/_history/{vid}:
    get:
      tags:
      - EnrollmentResponse
      summary: EnrollmentResponseHistoryByIdAndVid
      operationId: EnrollmentResponseHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnrollmentResponse'
      deprecated: false
  /PaymentNotice:
    post:
      tags:
      - PaymentNotice
      summary: PaymentNotice
      operationId: PaymentNotice
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentNotice'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - PaymentNotice
      summary: PaymentNotice
      operationId: PaymentNotice
      parameters:
      - name: organization
        in: query
        description: The organization who generated this resource
        style: form
        explode: true
        schema:
          type: string
      - name: provider
        in: query
        description: The reference to the provider
        style: form
        explode: true
        schema:
          type: string
      - name: request
        in: query
        description: The Claim
        style: form
        explode: true
        schema:
          type: string
      - name: response
        in: query
        description: The ClaimResponse
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: created
        in: query
        description: Creation date fro the notice
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: The business identifier of the notice
        style: form
        explode: true
        schema:
          type: string
      - name: payment-status
        in: query
        description: The type of payment notice
        style: form
        explode: true
        schema:
          type: string
      - name: statusdate
        in: query
        description: The date of the payment action
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentNotice'
                description: Success
      deprecated: false
  /PaymentNotice/{id}:
    get:
      tags:
      - PaymentNotice
      summary: PaymentNoticeById
      operationId: PaymentNoticeById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentNotice'
      deprecated: false
    put:
      tags:
      - PaymentNotice
      summary: PaymentNoticeById
      operationId: PaymentNoticeById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentNotice'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - PaymentNotice
      summary: PaymentNoticeById
      operationId: PaymentNoticeById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /PaymentNotice/{id}/_history:
    get:
      tags:
      - PaymentNotice
      summary: PaymentNoticeHistoryById
      operationId: PaymentNoticeHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /PaymentNotice/_history:
    get:
      tags:
      - PaymentNotice
      summary: PaymentNoticeHistory
      operationId: PaymentNoticeHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /PaymentNotice/{id}/_history/{vid}:
    get:
      tags:
      - PaymentNotice
      summary: PaymentNoticeHistoryByIdAndVid
      operationId: PaymentNoticeHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentNotice'
      deprecated: false
  /PaymentReconciliation:
    post:
      tags:
      - PaymentReconciliation
      summary: PaymentReconciliation
      operationId: PaymentReconciliation
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentReconciliation'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - PaymentReconciliation
      summary: PaymentReconciliation
      operationId: PaymentReconciliation
      parameters:
      - name: organization
        in: query
        description: The organization who generated this resource
        style: form
        explode: true
        schema:
          type: string
      - name: request
        in: query
        description: The reference to the claim
        style: form
        explode: true
        schema:
          type: string
      - name: request-organization
        in: query
        description: The organization who generated this resource
        style: form
        explode: true
        schema:
          type: string
      - name: request-provider
        in: query
        description: The reference to the provider who sumbitted the claim
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: created
        in: query
        description: The creation date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: disposition
        in: query
        description: The contents of the disposition message
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: The business identifier of the Explanation of Benefit
        style: form
        explode: true
        schema:
          type: string
      - name: outcome
        in: query
        description: The processing outcome
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentReconciliation'
                description: Success
      deprecated: false
  /PaymentReconciliation/{id}:
    get:
      tags:
      - PaymentReconciliation
      summary: PaymentReconciliationById
      operationId: PaymentReconciliationById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentReconciliation'
      deprecated: false
    put:
      tags:
      - PaymentReconciliation
      summary: PaymentReconciliationById
      operationId: PaymentReconciliationById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentReconciliation'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - PaymentReconciliation
      summary: PaymentReconciliationById
      operationId: PaymentReconciliationById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /PaymentReconciliation/{id}/_history:
    get:
      tags:
      - PaymentReconciliation
      summary: PaymentReconciliationHistoryById
      operationId: PaymentReconciliationHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /PaymentReconciliation/_history:
    get:
      tags:
      - PaymentReconciliation
      summary: PaymentReconciliationHistory
      operationId: PaymentReconciliationHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /PaymentReconciliation/{id}/_history/{vid}:
    get:
      tags:
      - PaymentReconciliation
      summary: PaymentReconciliationHistoryByIdAndVid
      operationId: PaymentReconciliationHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentReconciliation'
      deprecated: false
  /Person:
    post:
      tags:
      - Person
      summary: Person
      operationId: Person
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Person
      summary: Person
      operationId: Person
      parameters:
      - name: link
        in: query
        description: Any link has this Patient, Person, RelatedPerson or Practitioner reference
        style: form
        explode: true
        schema:
          type: string
      - name: organization
        in: query
        description: The organization at which this person record is being managed
        style: form
        explode: true
        schema:
          type: string
      - name: patient
        in: query
        description: The Person links to this Patient
        style: form
        explode: true
        schema:
          type: string
      - name: practitioner
        in: query
        description: The Person links to this Practitioner
        style: form
        explode: true
        schema:
          type: string
      - name: relatedperson
        in: query
        description: The Person links to this RelatedPerson
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: address
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A server defined search that may match any of the string fields in the Address, including line, city, state, country, postalCode, and/or text\r\n* [Practitioner](practitioner.html): A server defined search that may match any of the string fields in the Address, including line, city, state, country, postalCode, and/or text\r\n* [Person](person.html): A server defined search that may match any of the string fields in the Address, including line, city, state, country, postalCode, and/or text\r\n* [Patient](patient.html): A server defined search that may match any of the string fields in the Address, including line, city, state, country, postalCode, and/or text"
        style: form
        explode: true
        schema:
          type: string
      - name: address-city
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A city specified in an address\r\n* [Practitioner](practitioner.html): A city specified in an address\r\n* [Person](person.html): A city specified in an address\r\n* [Patient](patient.html): A city specified in an address"
        style: form
        explode: true
        schema:
          type: string
      - name: address-country
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A country specified in an address\r\n* [Practitioner](practitioner.html): A country specified in an address\r\n* [Person](person.html): A country specified in an address\r\n* [Patient](patient.html): A country specified in an address"
        style: form
        explode: true
        schema:
          type: string
      - name: address-postalcode
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A postal code specified in an address\r\n* [Practitioner](practitioner.html): A postalCode specified in an address\r\n* [Person](person.html): A postal code specified in an address\r\n* [Patient](patient.html): A postalCode specified in an address"
        style: form
        explode: true
        schema:
          type: string
      - name: address-state
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A state specified in an address\r\n* [Practitioner](practitioner.html): A state specified in an address\r\n* [Person](person.html): A state specified in an address\r\n* [Patient](patient.html): A state specified in an address"
        style: form
        explode: true
        schema:
          type: string
      - name: address-use
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A use code specified in an address\r\n* [Practitioner](practitioner.html): A use code specified in an address\r\n* [Person](person.html): A use code specified in an address\r\n* [Patient](patient.html): A use code specified in an address"
        style: form
        explode: true
        schema:
          type: string
      - name: birthdate
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): The Related Person's date of birth\r\n* [Person](person.html): The person's date of birth\r\n* [Patient](patient.html): The patient's date of birth"
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: email
        in: query
        description: "Multiple Resources: \r\n\r\n* [PractitionerRole](practitionerrole.html): A value in an email contact\r\n* [RelatedPerson](relatedperson.html): A value in an email contact\r\n* [Practitioner](practitioner.html): A value in an email contact\r\n* [Person](person.html): A value in an email contact\r\n* [Patient](patient.html): A value in an email contact"
        style: form
        explode: true
        schema:
          type: string
      - name: gender
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): Gender of the related person\r\n* [Practitioner](practitioner.html): Gender of the practitioner\r\n* [Person](person.html): The gender of the person\r\n* [Patient](patient.html): Gender of the patient"
        style: form
        explode: true
        schema:
          type: string
      - name: phone
        in: query
        description: "Multiple Resources: \r\n\r\n* [PractitionerRole](practitionerrole.html): A value in a phone contact\r\n* [RelatedPerson](relatedperson.html): A value in a phone contact\r\n* [Practitioner](practitioner.html): A value in a phone contact\r\n* [Person](person.html): A value in a phone contact\r\n* [Patient](patient.html): A value in a phone contact"
        style: form
        explode: true
        schema:
          type: string
      - name: phonetic
        in: query
        description: "Multiple Resources: \r\n\r\n* [RelatedPerson](relatedperson.html): A portion of name using some kind of phonetic matching algorithm\r\n* [Practitioner](practitioner.html): A portion of either family or given name using some kind of phonetic matching algorithm\r\n* [Person](person.html): A portion of name using some kind of phonetic matching algorithm\r\n* [Patient](patient.html): A portion of either family or given name using some kind of phonetic matching algorithm"
        style: form
        explode: true
        schema:
          type: string
      - name: telecom
        in: query
        description: "Multiple Resources: \r\n\r\n* [PractitionerRole](practitionerrole.html): The value in any kind of contact\r\n* [RelatedPerson](relatedperson.html): The value in any kind of contact\r\n* [Practitioner](practitioner.html): The value in any kind of contact\r\n* [Person](person.html): The value in any kind of contact\r\n* [Patient](patient.html): The value in any kind of telecom details of the patient"
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: A person Identifier
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: A server defined search that may match any of the string fields in the HumanName, including family, give, prefix, suffix, suffix, and/or text
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
                description: Success
      deprecated: false
  /Person/{id}:
    get:
      tags:
      - Person
      summary: PersonById
      operationId: PersonById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
      deprecated: false
    put:
      tags:
      - Person
      summary: PersonById
      operationId: PersonById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Person
      summary: PersonById
      operationId: PersonById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Person/{id}/_history:
    get:
      tags:
      - Person
      summary: PersonHistoryById
      operationId: PersonHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Person/_history:
    get:
      tags:
      - Person
      summary: PersonHistory
      operationId: PersonHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Person/{id}/_history/{vid}:
    get:
      tags:
      - Person
      summary: PersonHistoryByIdAndVid
      operationId: PersonHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
      deprecated: false
  /PlanDefinition:
    post:
      tags:
      - PlanDefinition
      summary: PlanDefinition
      operationId: PlanDefinition
      parameters: []
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - PlanDefinition
      summary: PlanDefinition
      operationId: PlanDefinition
      parameters:
      - name: composed-of
        in: query
        description: What resource is being referenced
        style: form
        explode: true
        schema:
          type: string
      - name: depends-on
        in: query
        description: What resource is being referenced
        style: form
        explode: true
        schema:
          type: string
      - name: derived-from
        in: query
        description: What resource is being referenced
        style: form
        explode: true
        schema:
          type: string
      - name: predecessor
        in: query
        description: What resource is being referenced
        style: form
        explode: true
        schema:
          type: string
      - name: successor
        in: query
        description: What resource is being referenced
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: The plan definition publication date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: description
        in: query
        description: The description of the plan definition
        style: form
        explode: true
        schema:
          type: string
      - name: effective
        in: query
        description: The time during which the plan definition is intended to be in use
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: External identifier for the plan definition
        style: form
        explode: true
        schema:
          type: string
      - name: jurisdiction
        in: query
        description: Intended jurisdiction for the plan definition
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: Computationally friendly name of the plan definition
        style: form
        explode: true
        schema:
          type: string
      - name: publisher
        in: query
        description: Name of the publisher of the plan definition
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: The current status of the plan definition
        style: form
        explode: true
        schema:
          type: string
      - name: title
        in: query
        description: The human-friendly name of the plan definition
        style: form
        explode: true
        schema:
          type: string
      - name: topic
        in: query
        description: Topics associated with the module
        style: form
        explode: true
        schema:
          type: string
      - name: url
        in: query
        description: The uri that identifies the plan definition
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        description: The business version of the plan definition
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /PlanDefinition/{id}:
    get:
      tags:
      - PlanDefinition
      summary: PlanDefinitionById
      operationId: PlanDefinitionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
    put:
      tags:
      - PlanDefinition
      summary: PlanDefinitionById
      operationId: PlanDefinitionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - PlanDefinition
      summary: PlanDefinitionById
      operationId: PlanDefinitionById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /PlanDefinition/{id}/_history:
    get:
      tags:
      - PlanDefinition
      summary: PlanDefinitionHistoryById
      operationId: PlanDefinitionHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /PlanDefinition/_history:
    get:
      tags:
      - PlanDefinition
      summary: PlanDefinitionHistory
      operationId: PlanDefinitionHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /PlanDefinition/{id}/_history/{vid}:
    get:
      tags:
      - PlanDefinition
      summary: PlanDefinitionHistoryByIdAndVid
      operationId: PlanDefinitionHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Success
      deprecated: false
  /ProcessRequest:
    post:
      tags:
      - ProcessRequest
      summary: ProcessRequest
      operationId: ProcessRequest
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessRequest'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - ProcessRequest
      summary: ProcessRequest
      operationId: ProcessRequest
      parameters:
      - name: organization
        in: query
        description: The organization who generated this request
        style: form
        explode: true
        schema:
          type: string
      - name: provider
        in: query
        description: The provider who regenerated this request
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: action
        in: query
        description: The action requested by this resource
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: The business identifier of the ProcessRequest
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessRequest'
                description: Success
      deprecated: false
  /ProcessRequest/{id}:
    get:
      tags:
      - ProcessRequest
      summary: ProcessRequestById
      operationId: ProcessRequestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessRequest'
      deprecated: false
    put:
      tags:
      - ProcessRequest
      summary: ProcessRequestById
      operationId: ProcessRequestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessRequest'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - ProcessRequest
      summary: ProcessRequestById
      operationId: ProcessRequestById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ProcessRequest/{id}/_history:
    get:
      tags:
      - ProcessRequest
      summary: ProcessRequestHistoryById
      operationId: ProcessRequestHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ProcessRequest/_history:
    get:
      tags:
      - ProcessRequest
      summary: ProcessRequestHistory
      operationId: ProcessRequestHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ProcessRequest/{id}/_history/{vid}:
    get:
      tags:
      - ProcessRequest
      summary: ProcessRequestHistoryByIdAndVid
      operationId: ProcessRequestHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessRequest'
      deprecated: false
  /ProcessResponse:
    post:
      tags:
      - ProcessResponse
      summary: ProcessResponse
      operationId: ProcessResponse
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessResponse'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - ProcessResponse
      summary: ProcessResponse
      operationId: ProcessResponse
      parameters:
      - name: organization
        in: query
        description: The organization who generated this resource
        style: form
        explode: true
        schema:
          type: string
      - name: request
        in: query
        description: The reference to the claim
        style: form
        explode: true
        schema:
          type: string
      - name: request-organization
        in: query
        description: The Organization who is responsible the request transaction
        style: form
        explode: true
        schema:
          type: string
      - name: request-provider
        in: query
        description: The Provider who is responsible the request transaction
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: identifier
        in: query
        description: The business identifier of the Explanation of Benefit
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResponse'
                description: Success
      deprecated: false
  /ProcessResponse/{id}:
    get:
      tags:
      - ProcessResponse
      summary: ProcessResponseById
      operationId: ProcessResponseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessResponse'
      deprecated: false
    put:
      tags:
      - ProcessResponse
      summary: ProcessResponseById
      operationId: ProcessResponseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessResponse'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - ProcessResponse
      summary: ProcessResponseById
      operationId: ProcessResponseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ProcessResponse/{id}/_history:
    get:
      tags:
      - ProcessResponse
      summary: ProcessResponseHistoryById
      operationId: ProcessResponseHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ProcessResponse/_history:
    get:
      tags:
      - ProcessResponse
      summary: ProcessResponseHistory
      operationId: ProcessResponseHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /ProcessResponse/{id}/_history/{vid}:
    get:
      tags:
      - ProcessResponse
      summary: ProcessResponseHistoryByIdAndVid
      operationId: ProcessResponseHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessResponse'
      deprecated: false
  /Questionnaire:
    post:
      tags:
      - Questionnaire
      summary: Questionnaire
      operationId: Questionnaire
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Questionnaire'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - Questionnaire
      summary: Questionnaire
      operationId: Questionnaire
      parameters:
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: code
        in: query
        description: A code that corresponds to one of its items in the questionnaire
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: The questionnaire publication date
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: description
        in: query
        description: The description of the questionnaire
        style: form
        explode: true
        schema:
          type: string
      - name: effective
        in: query
        description: The time during which the questionnaire is intended to be in use
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: External identifier for the questionnaire
        style: form
        explode: true
        schema:
          type: string
      - name: jurisdiction
        in: query
        description: Intended jurisdiction for the questionnaire
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: Computationally friendly name of the questionnaire
        style: form
        explode: true
        schema:
          type: string
      - name: publisher
        in: query
        description: Name of the publisher of the questionnaire
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: The current status of the questionnaire
        style: form
        explode: true
        schema:
          type: string
      - name: title
        in: query
        description: The human-friendly name of the questionnaire
        style: form
        explode: true
        schema:
          type: string
      - name: url
        in: query
        description: The uri that identifies the questionnaire
        style: form
        explode: true
        schema:
          type: string
      - name: version
        in: query
        description: The business version of the questionnaire
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Questionnaire'
                description: Success
      deprecated: false
  /Questionnaire/{id}:
    get:
      tags:
      - Questionnaire
      summary: QuestionnaireById
      operationId: QuestionnaireById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Questionnaire'
      deprecated: false
    put:
      tags:
      - Questionnaire
      summary: QuestionnaireById
      operationId: QuestionnaireById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Questionnaire'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - Questionnaire
      summary: QuestionnaireById
      operationId: QuestionnaireById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Questionnaire/{id}/_history:
    get:
      tags:
      - Questionnaire
      summary: QuestionnaireHistoryById
      operationId: QuestionnaireHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Questionnaire/_history:
    get:
      tags:
      - Questionnaire
      summary: QuestionnaireHistory
      operationId: QuestionnaireHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /Questionnaire/{id}/_history/{vid}:
    get:
      tags:
      - Questionnaire
      summary: QuestionnaireHistoryByIdAndVid
      operationId: QuestionnaireHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Questionnaire'
      deprecated: false
  /QuestionnaireResponse:
    post:
      tags:
      - QuestionnaireResponse
      summary: QuestionnaireResponse
      operationId: QuestionnaireResponse
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionnaireResponse'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - QuestionnaireResponse
      summary: QuestionnaireResponse
      operationId: QuestionnaireResponse
      parameters:
      - name: author
        in: query
        description: The author of the questionnaire response
        style: form
        explode: true
        schema:
          type: string
      - name: based-on
        in: query
        description: Plan/proposal/order fulfilled by this questionnaire response
        style: form
        explode: true
        schema:
          type: string
      - name: context
        in: query
        description: Encounter or episode associated with the questionnaire response
        style: form
        explode: true
        schema:
          type: string
      - name: parent
        in: query
        description: Procedure or observation this questionnaire response was performed as a part of
        style: form
        explode: true
        schema:
          type: string
      - name: patient
        in: query
        description: The patient that is the subject of the questionnaire response
        style: form
        explode: true
        schema:
          type: string
      - name: questionnaire
        in: query
        description: The questionnaire the answers are provided for
        style: form
        explode: true
        schema:
          type: string
      - name: source
        in: query
        description: The individual providing the information reflected in the questionnaire respose
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: The subject of the questionnaire response
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: authored
        in: query
        description: When the questionnaire response was last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: The unique identifier for the questionnaire response
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: The status of the questionnaire response
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuestionnaireResponse'
                description: Success
      deprecated: false
  /QuestionnaireResponse/{id}:
    get:
      tags:
      - QuestionnaireResponse
      summary: QuestionnaireResponseById
      operationId: QuestionnaireResponseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionnaireResponse'
      deprecated: false
    put:
      tags:
      - QuestionnaireResponse
      summary: QuestionnaireResponseById
      operationId: QuestionnaireResponseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionnaireResponse'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - QuestionnaireResponse
      summary: QuestionnaireResponseById
      operationId: QuestionnaireResponseById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /QuestionnaireResponse/{id}/_history:
    get:
      tags:
      - QuestionnaireResponse
      summary: QuestionnaireResponseHistoryById
      operationId: QuestionnaireResponseHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /QuestionnaireResponse/_history:
    get:
      tags:
      - QuestionnaireResponse
      summary: QuestionnaireResponseHistory
      operationId: QuestionnaireResponseHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /QuestionnaireResponse/{id}/_history/{vid}:
    get:
      tags:
      - QuestionnaireResponse
      summary: QuestionnaireResponseHistoryByIdAndVid
      operationId: QuestionnaireResponseHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionnaireResponse'
      deprecated: false
  /RiskAssessment:
    post:
      tags:
      - RiskAssessment
      summary: RiskAssessment
      operationId: RiskAssessment
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RiskAssessment'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    get:
      tags:
      - RiskAssessment
      summary: RiskAssessment
      operationId: RiskAssessment
      parameters:
      - name: patient
        in: query
        description: "Multiple Resources: \r\n\r\n* [ReferralRequest](referralrequest.html): Who the referral is about\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [ImagingManifest](imagingmanifest.html): Subject of the ImagingManifest (or a DICOM Key Object Selection which it represents)\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Encounter](encounter.html): The patient ro group present at the encounter\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who care plan is for\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [List](list.html): If all resources have the same subject\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n* [ProcedureRequest](procedurerequest.html): Search by subject - a patient\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Condition](condition.html): Who has the condition?\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed"
        style: form
        explode: true
        schema:
          type: string
      - name: encounter
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [DeviceRequest](devicerequest.html): Encounter or Episode during which request was created\r\n* [Procedure](procedure.html): Search by encounter\r\n* [List](list.html): Context in which list created\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n* [ProcedureRequest](procedurerequest.html): An encounter in which this request is made\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Composition](composition.html): Context of the Composition"
        style: form
        explode: true
        schema:
          type: string
      - name: condition
        in: query
        description: Condition assessed
        style: form
        explode: true
        schema:
          type: string
      - name: performer
        in: query
        description: Who did assessment?
        style: form
        explode: true
        schema:
          type: string
      - name: subject
        in: query
        description: Who/what does assessment apply to?
        style: form
        explode: true
        schema:
          type: string
      - name: _id
        in: query
        description: Logical id of this artifact
        style: form
        explode: true
        schema:
          type: string
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: form
        explode: true
        schema:
          type: string
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: "Multiple Resources: \r\n\r\n* [Consent](consent.html): When this Consent was created or indexed\r\n* [SupplyRequest](supplyrequest.html): When the request was made\r\n* [RiskAssessment](riskassessment.html): When was assessment made?\r\n* [CareTeam](careteam.html): Time period team covers\r\n* [FamilyMemberHistory](familymemberhistory.html): When history was captured/updated\r\n* [Encounter](encounter.html): A date within the period the Encounter lasted\r\n* [AllergyIntolerance](allergyintolerance.html): Date record was believed accurate\r\n* [CarePlan](careplan.html): Time period plan covers\r\n* [EpisodeOfCare](episodeofcare.html): The provided date search value falls within the episode of care's period\r\n* [Procedure](procedure.html): Date/Period the procedure was performed\r\n* [List](list.html): When the list was prepared\r\n* [Immunization](immunization.html): Vaccination  (non)-Administration Date\r\n* [Flag](flag.html): Time period when flag is active\r\n* [Observation](observation.html): Obtained date/time. If the obtained element is a period, a date that falls in the period\r\n* [DiagnosticReport](diagnosticreport.html): The clinically relevant time of the report\r\n* [Composition](composition.html): Composition editing time\r\n* [DetectedIssue](detectedissue.html): When identified\r\n* [ClinicalImpression](clinicalimpression.html): When the assessment was documented"
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: identifier
        in: query
        description: "Multiple Resources: \r\n\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [Goal](goal.html): External Ids for this goal\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [SupplyRequest](supplyrequest.html): Unique identifier\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [ImagingStudy](imagingstudy.html): Other identifiers for the Study\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [List](list.html): Business identifier\r\n* [Immunization](immunization.html): Business identifier\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n* [ProcedureRequest](procedurerequest.html): Identifiers assigned to this order\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Composition](composition.html): Logical identifier of composition (version-independent)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [SupplyDelivery](supplydelivery.html): External identifier"
        style: form
        explode: true
        schema:
          type: string
      - name: method
        in: query
        description: Evaluation mechanism
        style: form
        explode: true
        schema:
          type: string
      - name: probability
        in: query
        description: Likelihood of specified outcome
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: risk
        in: query
        description: Likelihood of specified outcome as a qualitative value
        style: form
        explode: true
        schema:
          type: string
      - name: _format
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RiskAssessment'
                description: Success
      deprecated: false
  /RiskAssessment/{id}:
    get:
      tags:
      - RiskAssessment
      summary: RiskAssessmentById
      operationId: RiskAssessmentById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskAssessment'
      deprecated: false
    put:
      tags:
      - RiskAssessment
      summary: RiskAssessmentById
      operationId: RiskAssessmentById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RiskAssessment'
        required: false
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
    delete:
      tags:
      - RiskAssessment
      summary: RiskAssessmentById
      operationId: RiskAssessmentById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /RiskAssessment/{id}/_history:
    get:
      tags:
      - RiskAssessment
      summary: RiskAssessmentHistoryById
      operationId: RiskAssessmentHistoryById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /RiskAssessment/_history:
    get:
      tags:
      - RiskAssessment
      summary: RiskAssessmentHistory
      operationId: RiskAssessmentHistory
      parameters:
      - name: _count
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: _since
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
      deprecated: false
  /RiskAssessment/{id}/_history/{vid}:
    get:
      tags:
      - RiskAssessment
      summary: RiskAssessmentHistoryByIdAndVid
      operationId: RiskAssessmentHistoryByIdAndVid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: vid
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskAssessment'
      deprecated: false
components:
  schemas:
    Account:
      title: Account
      required:
      - resourceType
      - claim_comments
      - id
      - text
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
    Claim:
      title: Claim
      required:
      - id
      - type
      - created
      - priority
      - status
      type: object
      properties:
        id:
          minLength: 1
          type: string
        type:
          minLength: 1
          type: string
        created:
          minLength: 1
          type: string
        priority:
          $ref: '#/components/schemas/Priority'
        status:
          minLength: 1
          type: string
    ClaimResponse:
      title: ClaimResponse
      required:
      - resourceType
      - id
      - text
      - identifier
      - requestReference
      - created
      - organizationIdentifier
      - outcome
      - _outcome
      - disposition
      - payeeType
      - item
      - totalCost
      - totalBenefit
      - paymentDate
      - _paymentDate
      - paymentAmount
      - paymentRef
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        requestReference:
          $ref: '#/components/schemas/RequestReference'
        created:
          minLength: 1
          type: string
        organizationIdentifier:
          $ref: '#/components/schemas/OrganizationIdentifier'
        outcome:
          minLength: 1
          type: string
        _outcome:
          $ref: '#/components/schemas/Outcome'
        disposition:
          minLength: 1
          type: string
        payeeType:
          $ref: '#/components/schemas/PayeeType'
        item:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Item1'
          description: ''
        totalCost:
          $ref: '#/components/schemas/TotalCost'
        totalBenefit:
          $ref: '#/components/schemas/TotalBenefit'
        paymentDate:
          minLength: 1
          type: string
        _paymentDate:
          $ref: '#/components/schemas/PaymentDate'
        paymentAmount:
          $ref: '#/components/schemas/PaymentAmount'
        paymentRef:
          $ref: '#/components/schemas/PaymentRef'
    Communication:
      title: Communication
      required:
      - resourceType
      - id
      - text
      - identifier
      - category
      - sender
      - recipient
      - payload
      - status
      - sent
      - subject
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier7'
          description: ''
        category:
          $ref: '#/components/schemas/Category3'
        sender:
          $ref: '#/components/schemas/Sender'
        recipient:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Recipient'
          description: ''
        payload:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Payload'
          description: ''
        status:
          minLength: 1
          type: string
        sent:
          minLength: 1
          type: string
        subject:
          $ref: '#/components/schemas/Subject4'
    CommunicationRequest:
      title: CommunicationRequest
      required:
      - resourceType
      - id
      - text
      - subject
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        subject:
          $ref: '#/components/schemas/Subject5'
    Consent:
      title: Consent
      required:
      - resourceType
      - id
      - meta
      - identifier
      - status
      - category
      - patient
      - period
      - dateTime
      - purpose
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          type: number
        meta:
          $ref: '#/components/schemas/Meta2'
        identifier:
          $ref: '#/components/schemas/Identifier10'
        status:
          minLength: 1
          type: string
        category:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Category5'
          description: ''
        patient:
          $ref: '#/components/schemas/Patient1'
        period:
          $ref: '#/components/schemas/Period3'
        dateTime:
          minLength: 1
          type: string
        purpose:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Purpose'
          description: ''
    Contract:
      title: Contract
      required:
      - resourceType
      - claim_comments
      - id
      - text
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
    Coverage:
      title: Coverage
      required:
      - resourceType
      - id
      - text
      - issuerReference
      - period
      - type
      - planholderReference
      - beneficiaryReference
      - relationship
      - identifier
      - plan
      - subPlan
      - dependent
      - sequence
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        issuerReference:
          $ref: '#/components/schemas/IssuerReference'
        period:
          $ref: '#/components/schemas/Period2'
        type:
          $ref: '#/components/schemas/Type2'
        planholderReference:
          $ref: '#/components/schemas/PlanholderReference'
        beneficiaryReference:
          $ref: '#/components/schemas/BeneficiaryReference'
        relationship:
          $ref: '#/components/schemas/Relationship'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        plan:
          minLength: 1
          type: string
        subPlan:
          minLength: 1
          type: string
        dependent:
          type: number
        sequence:
          type: number
    DataElement:
      title: DataElement
      required:
      - resourceType
      - id
      - text
      - contained
      - identifier
      - version
      - status
      - publisher
      - name
      - useContext
      - element
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        contained:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contained2'
          description: ''
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier1'
          description: ''
        version:
          minLength: 1
          type: string
        status:
          minLength: 1
          type: string
        publisher:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        useContext:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UseContext1'
          description: ''
        element:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Element1'
          description: ''
    DetectedIssue:
      title: DetectedIssue
      required:
      - resourceType
      - id
      - text
      - category
      - severity
      - implicated
      - detail
      - date
      - author
      - mitigation
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        category:
          $ref: '#/components/schemas/Category6'
        severity:
          minLength: 1
          type: string
        implicated:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Implicated'
          description: ''
        detail:
          minLength: 1
          type: string
        date:
          minLength: 1
          type: string
        author:
          $ref: '#/components/schemas/Author'
        mitigation:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Mitigation'
          description: ''
    DocumentReference:
      title: DocumentReference
      required:
      - resourceType
      - id
      - text
      - contained
      - masterIdentifier
      - identifier
      - subject
      - type
      - class
      - author
      - custodian
      - authenticator
      - created
      - indexed
      - status
      - docStatus
      - relatesTo
      - description
      - securityLabel
      - content
      - context
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text1'
        contained:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contained5'
          description: ''
        masterIdentifier:
          $ref: '#/components/schemas/MasterIdentifier'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        subject:
          $ref: '#/components/schemas/Subject4'
        type:
          $ref: '#/components/schemas/Type9'
        class:
          $ref: '#/components/schemas/Class'
        author:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Author'
          description: ''
        custodian:
          $ref: '#/components/schemas/Custodian1'
        authenticator:
          $ref: '#/components/schemas/Authenticator'
        created:
          minLength: 1
          type: string
        indexed:
          minLength: 1
          type: string
        status:
          minLength: 1
          type: string
        docStatus:
          $ref: '#/components/schemas/DocStatus'
        relatesTo:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/RelatesTo'
          description: ''
        description:
          minLength: 1
          type: string
        securityLabel:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/SecurityLabel'
          description: ''
        content:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Content'
          description: ''
        context:
          $ref: '#/components/schemas/Context'
    EligibilityRequest:
      title: EligibilityRequest
      required:
      - resourceType
      - id
      - text
      - identifier
      - created
      - targetReference
      - organizationReference
      - priority
      - patientReference
      - coverageReference
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        created:
          minLength: 1
          type: string
        targetReference:
          $ref: '#/components/schemas/TargetReference'
        organizationReference:
          $ref: '#/components/schemas/OrganizationReference'
        priority:
          $ref: '#/components/schemas/Priority'
        patientReference:
          $ref: '#/components/schemas/PatientReference'
        coverageReference:
          $ref: '#/components/schemas/CoverageReference'
    EligibilityResponse:
      title: EligibilityResponse
      required:
      - resourceType
      - id
      - text
      - identifier
      - requestReference
      - outcome
      - disposition
      - created
      - organizationReference
      - inforce
      - _inforce
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        requestReference:
          $ref: '#/components/schemas/RequestReference'
        outcome:
          minLength: 1
          type: string
        disposition:
          minLength: 1
          type: string
        created:
          minLength: 1
          type: string
        organizationReference:
          $ref: '#/components/schemas/OrganizationReference'
        inforce:
          type: boolean
        _inforce:
          $ref: '#/components/schemas/Inforce'
    EnrollmentRequest:
      title: EnrollmentRequest
      required:
      - resourceType
      - id
      - text
      - identifier
      - created
      - organization
      - subject
      - coverage
      - relationship
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        created:
          minLength: 1
          type: string
        organization:
          $ref: '#/components/schemas/Organization1'
        subject:
          $ref: '#/components/schemas/Subject4'
        coverage:
          $ref: '#/components/schemas/Coverage2'
        relationship:
          $ref: '#/components/schemas/Relationship'
    EnrollmentResponse:
      title: EnrollmentResponse
      required:
      - resourceType
      - id
      - text
      - identifier
      - request
      - outcome
      - disposition
      - created
      - organization
      - requestOrganization
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        request:
          $ref: '#/components/schemas/Request'
        outcome:
          minLength: 1
          type: string
        disposition:
          minLength: 1
          type: string
        created:
          minLength: 1
          type: string
        organization:
          $ref: '#/components/schemas/Organization1'
        requestOrganization:
          $ref: '#/components/schemas/RequestOrganization'
    ExpansionProfile:
      title: ExpansionProfile
      required:
      - resourceType
      - id
      - text
      - status
      - experimental
      - excludeNested
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        status:
          minLength: 1
          type: string
        experimental:
          type: boolean
        excludeNested:
          type: boolean
    ExplanationOfBenefit:
      title: ExplanationOfBenefit
      required:
      - resourceType
      - id
      - text
      - identifier
      - claimReference
      - created
      - _created
      - disposition
      - organizationReference
      - patientReference
      - coverage
      - item
      - totalCost
      - totalBenefit
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        claimReference:
          $ref: '#/components/schemas/ClaimReference'
        created:
          minLength: 1
          type: string
        _created:
          $ref: '#/components/schemas/Created'
        disposition:
          minLength: 1
          type: string
        organizationReference:
          $ref: '#/components/schemas/OrganizationReference'
        patientReference:
          $ref: '#/components/schemas/PatientReference'
        coverage:
          $ref: '#/components/schemas/Coverage3'
        item:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Item4'
          description: ''
        totalCost:
          $ref: '#/components/schemas/TotalCost'
        totalBenefit:
          $ref: '#/components/schemas/TotalBenefit'
    Group:
      title: Group
      required:
      - resourceType
      - id
      - text
      - type
      - actual
      - code
      - name
      - quantity
      - characteristic
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        type:
          minLength: 1
          type: string
        actual:
          type: boolean
        code:
          $ref: '#/components/schemas/Code2'
        name:
          minLength: 1
          type: string
        quantity:
          type: number
        characteristic:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
          description: ''
    GuidanceResponse:
      title: GuidanceResponse
      required:
      - resourceType
      - id
      - text
      - module
      - status
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        module:
          $ref: '#/components/schemas/Module'
        status:
          minLength: 1
          type: string
    Library:
      title: Library
      required:
      - resourceType
      - id
      - text
      - moduleMetadata
      - model
      - valueSet
      - dataRequirement
      - document
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        moduleMetadata:
          $ref: '#/components/schemas/ModuleMetadata'
        model:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Model'
          description: ''
        valueSet:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ValueSet2'
          description: ''
        dataRequirement:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/DataRequirement'
          description: ''
        document:
          $ref: '#/components/schemas/Document'
    Linkage:
      title: Linkage
      required:
      - resourceType
      - id
      - text
      - item
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        item:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Item5'
          description: ''
    List:
      title: List
      required:
      - resourceType
      - id
      - text
      - identifier
      - status
      - mode
      - subject
      - encounter
      - date
      - source
      - entry
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        status:
          minLength: 1
          type: string
        mode:
          minLength: 1
          type: string
        subject:
          $ref: '#/components/schemas/Subject5'
        encounter:
          $ref: '#/components/schemas/Encounter1'
        date:
          minLength: 1
          type: string
        source:
          $ref: '#/components/schemas/Source1'
        entry:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Entry2'
          description: ''
    Location:
      title: Location
      required:
      - resourceType
      - id
      - text
      - extension
      - identifier
      - status
      - name
      - description
      - mode
      - telecom
      - address
      - physicalType
      - position
      - managingOrganization
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        extension:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Extension7'
          description: ''
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier1'
          description: ''
        status:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        description:
          minLength: 1
          type: string
        mode:
          minLength: 1
          type: string
        telecom:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Telecom2'
          description: ''
        address:
          $ref: '#/components/schemas/Address2'
        physicalType:
          $ref: '#/components/schemas/PhysicalType1'
        position:
          $ref: '#/components/schemas/Position'
        managingOrganization:
          $ref: '#/components/schemas/ManagingOrganization'
    Media:
      title: Media
      required:
      - resourceType
      - id
      - text
      - type
      - subtype
      - subject
      - operator
      - deviceName
      - height
      - width
      - frames
      - _frames
      - content
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        type:
          minLength: 1
          type: string
        subtype:
          $ref: '#/components/schemas/Subtype1'
        subject:
          $ref: '#/components/schemas/Subject4'
        operator:
          $ref: '#/components/schemas/Operator'
        deviceName:
          minLength: 1
          type: string
        height:
          type: number
        width:
          type: number
        frames:
          type: number
        _frames:
          $ref: '#/components/schemas/Frames'
        content:
          $ref: '#/components/schemas/Content2'
    MessageHeader:
      title: MessageHeader
      required:
      - resourceType
      - id
      - text
      - timestamp
      - event
      - response
      - source
      - destination
      - enterer
      - author
      - responsible
      - reason
      - data
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        timestamp:
          minLength: 1
          type: string
        event:
          $ref: '#/components/schemas/Event2'
        response:
          $ref: '#/components/schemas/Response'
        source:
          $ref: '#/components/schemas/Source3'
        destination:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Destination'
          description: ''
        enterer:
          $ref: '#/components/schemas/Enterer'
        author:
          $ref: '#/components/schemas/Author'
        responsible:
          $ref: '#/components/schemas/Responsible'
        reason:
          $ref: '#/components/schemas/Reason1'
        data:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Datum'
          description: ''
    NamingSystem:
      title: NamingSystem
      required:
      - resourceType
      - id
      - text
      - name
      - status
      - kind
      - date
      - publisher
      - contact
      - responsible
      - description
      - uniqueId
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        name:
          minLength: 1
          type: string
        status:
          minLength: 1
          type: string
        kind:
          minLength: 1
          type: string
        date:
          minLength: 1
          type: string
        publisher:
          minLength: 1
          type: string
        contact:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contact'
          description: ''
        responsible:
          minLength: 1
          type: string
        description:
          minLength: 1
          type: string
        uniqueId:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UniqueId'
          description: ''
    OperationDefinition:
      title: OperationDefinition
      required:
      - resourceType
      - id
      - text
      - url
      - version
      - name
      - status
      - kind
      - date
      - publisher
      - contact
      - description
      - code
      - comment
      - base
      - system
      - type
      - instance
      - parameter
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        url:
          minLength: 1
          type: string
        version:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        status:
          minLength: 1
          type: string
        kind:
          minLength: 1
          type: string
        date:
          minLength: 1
          type: string
        publisher:
          minLength: 1
          type: string
        contact:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contact'
          description: ''
        description:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
        comment:
          minLength: 1
          type: string
        base:
          $ref: '#/components/schemas/Base'
        system:
          type: boolean
        type:
          type: array
          items:
            type: object
          description: ''
        instance:
          type: boolean
        parameter:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
          description: ''
    Parameters:
      title: Parameters
      required:
      - resourceType
      - id
      - parameter
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        parameter:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Parameter1'
          description: ''
    PaymentNotice:
      title: PaymentNotice
      required:
      - resourceType
      - id
      - text
      - identifier
      - created
      - organizationReference
      - requestReference
      - paymentStatus
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        created:
          minLength: 1
          type: string
        organizationReference:
          $ref: '#/components/schemas/OrganizationReference'
        requestReference:
          $ref: '#/components/schemas/RequestReference'
        paymentStatus:
          $ref: '#/components/schemas/PaymentStatus'
    PaymentReconciliation:
      title: PaymentReconciliation
      required:
      - resourceType
      - id
      - text
      - identifier
      - requestReference
      - outcome
      - disposition
      - created
      - organizationReference
      - detail
      - total
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        requestReference:
          $ref: '#/components/schemas/RequestReference'
        outcome:
          minLength: 1
          type: string
        disposition:
          minLength: 1
          type: string
        created:
          minLength: 1
          type: string
        organizationReference:
          $ref: '#/components/schemas/OrganizationReference'
        detail:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Detail3'
          description: ''
        total:
          $ref: '#/components/schemas/Total1'
    Person:
      title: Person
      required:
      - resourceType
      - id
      - text
      - identifier
      - name
      - telecom
      - gender
      - _gender
      - birthDate
      - address
      - active
      - link
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier35'
          description: ''
        name:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Name4'
          description: ''
        telecom:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Telecom2'
          description: ''
        gender:
          minLength: 1
          type: string
        _gender:
          $ref: '#/components/schemas/Gender'
        birthDate:
          minLength: 1
          type: string
        address:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Address4'
          description: ''
        active:
          type: boolean
        link:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Link2'
          description: ''
    ProcessRequest:
      title: ProcessRequest
      required:
      - resourceType
      - id
      - text
      - action
      - identifier
      - created
      - organizationReference
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        action:
          minLength: 1
          type: string
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        created:
          minLength: 1
          type: string
        organizationReference:
          $ref: '#/components/schemas/OrganizationReference'
    ProcessResponse:
      title: ProcessResponse
      required:
      - resourceType
      - claim_comments
      - id
      - text
      - identifier
      - requestReference
      - outcome
      - disposition
      - created
      - organizationReference
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        requestReference:
          $ref: '#/components/schemas/RequestReference'
        outcome:
          $ref: '#/components/schemas/Outcome1'
        disposition:
          minLength: 1
          type: string
        created:
          minLength: 1
          type: string
        organizationReference:
          $ref: '#/components/schemas/OrganizationReference'
    Provenance:
      title: Provenance
      required:
      - resourceType
      - id
      - text
      - target
      - period
      - recorded
      - reason
      - location
      - policy
      - _policy
      - agent
      - entity
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        target:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Target4'
          description: ''
        period:
          $ref: '#/components/schemas/Period3'
        recorded:
          minLength: 1
          type: string
        reason:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Reason2'
          description: ''
        location:
          $ref: '#/components/schemas/Location1'
        policy:
          type: array
          items:
            type: object
          description: ''
        _policy:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Policy'
          description: ''
        agent:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Agent1'
          description: ''
        entity:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Entity1'
          description: ''
    Questionnaire:
      title: Questionnaire
      required:
      - resourceType
      - id
      - text
      - status
      - date
      - title
      - subjectType
      - item
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        status:
          minLength: 1
          type: string
        date:
          minLength: 1
          type: string
        title:
          minLength: 1
          type: string
        subjectType:
          type: array
          items:
            type: object
          description: ''
        item:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Item7'
          description: ''
    QuestionnaireResponse:
      title: QuestionnaireResponse
      required:
      - resourceType
      - claim_comments
      - id
      - text
      - contained
      - status
      - subject
      - author
      - authored
      - item
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        contained:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contained7'
          description: ''
        status:
          minLength: 1
          type: string
        subject:
          $ref: '#/components/schemas/Subject4'
        author:
          $ref: '#/components/schemas/Author'
        authored:
          minLength: 1
          type: string
        item:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Item11'
          description: ''
    SearchParameter:
      title: SearchParameter
      required:
      - resourceType
      - id
      - text
      - url
      - name
      - status
      - experimental
      - date
      - publisher
      - contact
      - requirements
      - _requirements
      - code
      - base
      - type
      - description
      - xpath
      - xpathUsage
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        url:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        status:
          minLength: 1
          type: string
        experimental:
          type: boolean
        date:
          minLength: 1
          type: string
        publisher:
          minLength: 1
          type: string
        contact:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contact8'
          description: ''
        requirements:
          minLength: 1
          type: string
        _requirements:
          $ref: '#/components/schemas/Requirements'
        code:
          minLength: 1
          type: string
        base:
          minLength: 1
          type: string
        type:
          minLength: 1
          type: string
        description:
          minLength: 1
          type: string
        xpath:
          minLength: 1
          type: string
        xpathUsage:
          minLength: 1
          type: string
    Sequence:
      title: Sequence
      required:
      - resourceType
      - id
      - text
      - type
      - patient
      - species
      - referenceSeq
      - variation
      - repository
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        type:
          minLength: 1
          type: string
        patient:
          $ref: '#/components/schemas/Patient1'
        species:
          $ref: '#/components/schemas/Species'
        referenceSeq:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ReferenceSeq'
          description: ''
        variation:
          $ref: '#/components/schemas/Variation'
        repository:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Repository'
          description: ''
    Subscription:
      title: Subscription
      required:
      - resourceType
      - id
      - text
      - criteria
      - contact
      - reason
      - status
      - channel
      - end
      - tag
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        criteria:
          minLength: 1
          type: string
        contact:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contact2'
          description: ''
        reason:
          minLength: 1
          type: string
        status:
          minLength: 1
          type: string
        channel:
          $ref: '#/components/schemas/Channel'
        end:
          minLength: 1
          type: string
        tag:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          description: ''
    Task:
      title: Task
      required:
      - resourceType
      - id
      - text
      - type
      - status
      - subject
      - created
      - lastModified
      - creator
      - owner
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        type:
          $ref: '#/components/schemas/Type8'
        status:
          minLength: 1
          type: string
        subject:
          $ref: '#/components/schemas/Subject4'
        created:
          minLength: 1
          type: string
        lastModified:
          minLength: 1
          type: string
        creator:
          $ref: '#/components/schemas/Creator'
        owner:
          $ref: '#/components/schemas/Owner'
    TestScript:
      title: TestScript
      required:
      - resourceType
      - id
      - text
      - url
      - version
      - name
      - status
      - identifier
      - experimental
      - publisher
      - contact
      - date
      - description
      - useContext
      - requirements
      - copyright
      - metadata
      - fixture
      - profile
      - setup
      - test
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        url:
          minLength: 1
          type: string
        version:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        status:
          minLength: 1
          type: string
        identifier:
          $ref: '#/components/schemas/Identifier'
        experimental:
          type: boolean
        publisher:
          minLength: 1
          type: string
        contact:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contact11'
          description: ''
        date:
          minLength: 1
          type: string
        description:
          minLength: 1
          type: string
        useContext:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UseContext4'
          description: ''
        requirements:
          minLength: 1
          type: string
        copyright:
          minLength: 1
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        fixture:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Fixture'
          description: ''
        profile:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Profile1'
          description: ''
        setup:
          $ref: '#/components/schemas/Setup'
        test:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Test'
          description: ''
    ValueSet:
      title: ValueSet
      required:
      - resourceType
      - id
      - meta
      - text
      - url
      - _url
      - identifier
      - version
      - _version
      - name
      - _name
      - status
      - experimental
      - publisher
      - contact
      - date
      - lockedDate
      - _lockedDate
      - description
      - copyright
      - compose
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        meta:
          $ref: '#/components/schemas/Meta3'
        text:
          $ref: '#/components/schemas/Text'
        url:
          minLength: 1
          type: string
        _url:
          $ref: '#/components/schemas/Url'
        identifier:
          $ref: '#/components/schemas/Identifier6'
        version:
          minLength: 1
          type: string
        _version:
          $ref: '#/components/schemas/Version'
        name:
          minLength: 1
          type: string
        _name:
          $ref: '#/components/schemas/Name1'
        status:
          minLength: 1
          type: string
        experimental:
          type: boolean
        publisher:
          minLength: 1
          type: string
        contact:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contact'
          description: ''
        date:
          minLength: 1
          type: string
        lockedDate:
          minLength: 1
          type: string
        _lockedDate:
          $ref: '#/components/schemas/LockedDate'
        description:
          minLength: 1
          type: string
        copyright:
          minLength: 1
          type: string
        compose:
          $ref: '#/components/schemas/Compose1'
    VisionPrescription:
      title: VisionPrescription
      required:
      - resourceType
      - id
      - text
      - identifier
      - dateWritten
      - patient
      - prescriber
      - dispense
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text'
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        dateWritten:
          minLength: 1
          type: string
        patient:
          $ref: '#/components/schemas/Patient1'
        prescriber:
          $ref: '#/components/schemas/Prescriber'
        dispense:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Dispense'
          description: ''
    AccessionIdentifier:
      title: AccessionIdentifier
      required:
      - system
      - value
      type: object
      properties:
        system:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
    Acronym:
      title: Acronym
      required:
      - claim_comments
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
    Action:
      title: Action
      required:
      - coding
      - text
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
        text:
          minLength: 1
          type: string
    Action1:
      title: Action1
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        operation:
          $ref: '#/components/schemas/Operation'
    Action2:
      title: Action2
      type: object
      properties:
        operation:
          $ref: '#/components/schemas/Operation1'
    Activity:
      title: Activity
      type: object
      properties:
        detail:
          $ref: '#/components/schemas/Detail'
    Actor:
      title: Actor
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Actor3:
      title: Actor3
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    AdditionalInstructions:
      title: AdditionalInstructions
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Address:
      title: Address
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Address2:
      title: Address2
      required:
      - use
      - line
      - city
      - postalCode
      - country
      type: object
      properties:
        use:
          minLength: 1
          type: string
        line:
          type: array
          items:
            type: object
          description: ''
        city:
          minLength: 1
          type: string
        postalCode:
          minLength: 1
          type: string
        country:
          minLength: 1
          type: string
    Address3:
      title: Address3
      required:
      - city
      - state
      - postalCode
      - country
      type: object
      properties:
        line:
          type: array
          items:
            type: object
          description: ''
        city:
          minLength: 1
          type: string
        state:
          minLength: 1
          type: string
        postalCode:
          minLength: 1
          type: string
        country:
          minLength: 1
          type: string
    Address4:
      title: Address4
      required:
      - use
      - city
      - state
      - postalCode
      type: object
      properties:
        use:
          minLength: 1
          type: string
        line:
          type: array
          items:
            type: object
          description: ''
        city:
          minLength: 1
          type: string
        state:
          minLength: 1
          type: string
        postalCode:
          minLength: 1
          type: string
    Adjudication:
      title: Adjudication
      type: object
      properties:
        category:
          $ref: '#/components/schemas/Category2'
        amount:
          $ref: '#/components/schemas/Amount'
    Agent:
      title: Agent
      required:
      - requestor
      type: object
      properties:
        role:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Role'
          description: ''
        userId:
          $ref: '#/components/schemas/UserId'
        requestor:
          type: boolean
        network:
          $ref: '#/components/schemas/Network'
    Agent1:
      title: Agent1
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        role:
          $ref: '#/components/schemas/Role7'
        actor:
          $ref: '#/components/schemas/Actor3'
        userId:
          $ref: '#/components/schemas/UserId1'
        relatedAgent:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/RelatedAgent'
          description: ''
    Amount:
      title: Amount
      required:
      - value
      - system
      - code
      type: object
      properties:
        value:
          type: number
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Amount2:
      title: Amount2
      required:
      - value
      - unit
      - system
      - code
      type: object
      properties:
        value:
          type: number
        unit:
          minLength: 1
          type: string
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Answer:
      title: Answer
      type: object
      properties:
        valueCoding:
          $ref: '#/components/schemas/ValueCoding'
        item:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Item13'
          description: ''
    Answer1:
      title: Answer1
      type: object
      properties:
        valueCoding:
          $ref: '#/components/schemas/ValueCoding1'
    Assigner:
      title: Assigner
      required:
      - display
      type: object
      properties:
        display:
          minLength: 1
          type: string
    Attachment:
      title: Attachment
      required:
      - contentType
      - language
      - url
      - size
      - hash
      type: object
      properties:
        contentType:
          minLength: 1
          type: string
        language:
          minLength: 1
          type: string
        url:
          minLength: 1
          type: string
        size:
          type: number
        hash:
          minLength: 1
          type: string
    Attester:
      title: Attester
      required:
      - time
      type: object
      properties:
        mode:
          type: array
          items:
            type: object
          description: ''
        time:
          minLength: 1
          type: string
        party:
          $ref: '#/components/schemas/Party'
    Authenticator:
      title: Authenticator
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Author:
      title: Author
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Author1:
      title: Author1
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Authority:
      title: Authority
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    AuthorReference:
      title: AuthorReference
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Base:
      title: Base
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Base1:
      title: Base1
      required:
      - path
      - min
      - max
      type: object
      properties:
        path:
          minLength: 1
          type: string
        min:
          type: number
        max:
          minLength: 1
          type: string
    Basis:
      title: Basis
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    BeneficiaryReference:
      title: BeneficiaryReference
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Binding:
      title: Binding
      required:
      - strength
      - valueSetReference
      type: object
      properties:
        strength:
          minLength: 1
          type: string
        valueSetReference:
          $ref: '#/components/schemas/ValueSetReference'
    Capability:
      title: Capability
      required:
      - required
      - description
      - destination
      type: object
      properties:
        required:
          type: boolean
        description:
          minLength: 1
          type: string
        destination:
          type: number
        link:
          type: array
          items:
            type: object
          description: ''
        conformance:
          $ref: '#/components/schemas/Conformance'
    Capacity:
      title: Capacity
      required:
      - value
      - unit
      type: object
      properties:
        value:
          type: number
        unit:
          minLength: 1
          type: string
    CaseSensitive:
      title: CaseSensitive
      required:
      - claim_comments
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
    Category:
      title: Category
      required:
      - claim_comments
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
    Category1:
      title: Category1
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding8'
          description: ''
    Category2:
      title: Category2
      required:
      - code
      type: object
      properties:
        code:
          minLength: 1
          type: string
    Category3:
      title: Category3
      required:
      - coding
      - text
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding8'
          description: ''
        text:
          minLength: 1
          type: string
    Category4:
      title: Category4
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding24'
          description: ''
    Category5:
      title: Category5
      required:
      - text
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding27'
          description: ''
        text:
          minLength: 1
          type: string
    Category6:
      title: Category6
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Category9:
      title: Category9
      required:
      - coding
      - text
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
        text:
          minLength: 1
          type: string
    Category10:
      title: Category10
      required:
      - claim_comments
      - coding
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Category11:
      title: Category11
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Channel:
      title: Channel
      required:
      - type
      - endpoint
      - payload
      - header
      type: object
      properties:
        type:
          minLength: 1
          type: string
        endpoint:
          minLength: 1
          type: string
        payload:
          minLength: 1
          type: string
        header:
          minLength: 1
          type: string
    Characteristic:
      title: Characteristic
      required:
      - exclude
      type: object
      properties:
        code:
          $ref: '#/components/schemas/Code2'
        valueCodeableConcept:
          $ref: '#/components/schemas/ValueCodeableConcept3'
        exclude:
          type: boolean
    Characteristic1:
      title: Characteristic1
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding57'
          description: ''
    ClaimReference:
      title: ClaimReference
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Class:
      title: Class
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    CollectedDateTime:
      title: CollectedDateTime
      required:
      - claim_comments
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
    Collection:
      title: Collection
      required:
      - collector
      - comment
      - collectedDateTime
      - _collectedDateTime
      - quantity
      - method
      type: object
      properties:
        collector:
          $ref: '#/components/schemas/Collector'
        comment:
          minLength: 1
          type: string
        collectedDateTime:
          minLength: 1
          type: string
        _collectedDateTime:
          $ref: '#/components/schemas/CollectedDateTime'
        quantity:
          $ref: '#/components/schemas/Quantity2'
        method:
          $ref: '#/components/schemas/Method1'
    Collector:
      title: Collector
      required:
      - reference
      - _reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        _reference:
          $ref: '#/components/schemas/Reference'
    Compose:
      title: Compose
      required:
      - include
      type: object
      properties:
        include:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Include'
          description: ''
    Compose1:
      title: Compose1
      required:
      - include
      type: object
      properties:
        include:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Include1'
          description: ''
    Concept:
      title: Concept
      required:
      - code
      - display
      - definition
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        code:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
        definition:
          minLength: 1
          type: string
        designation:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Designation'
          description: ''
    Concept1:
      title: Concept1
      required:
      - code
      - display
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        code:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Concept2:
      title: Concept2
      required:
      - system
      - code
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Concept6:
      title: Concept6
      required:
      - code
      - display
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        code:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
        _display:
          $ref: '#/components/schemas/Display'
    Condition1:
      title: Condition1
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Condition2:
      title: Condition2
      type: object
      properties:
        code:
          $ref: '#/components/schemas/Code1'
        onsetQuantity:
          $ref: '#/components/schemas/OnsetQuantity'
        note:
          $ref: '#/components/schemas/Note2'
    Conformance:
      title: Conformance
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Contact:
      title: Contact
      required:
      - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
        telecom:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Telecom'
          description: ''
    Contact2:
      title: Contact2
      required:
      - system
      - value
      type: object
      properties:
        system:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
    Contact7:
      title: Contact7
      type: object
      properties:
        relationship:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Relationship3'
          description: ''
        organization:
          $ref: '#/components/schemas/Organization4'
    Contact8:
      title: Contact8
      required:
      - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
        telecom:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Telecom11'
          description: ''
    Contact11:
      title: Contact11
      required:
      - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
        telecom:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Telecom2'
          description: ''
    Contained:
      title: Contained
      required:
      - resourceType
      - id
      - description
      - status
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        extension:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Extension1'
          description: ''
        subject:
          $ref: '#/components/schemas/Subject'
        description:
          minLength: 1
          type: string
        status:
          minLength: 1
          type: string
    Contained1:
      title: Contained1
      required:
      - resourceType
      - id
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        name:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Name'
          description: ''
        practitionerRole:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PractitionerRole4'
          description: ''
    Contained2:
      title: Contained2
      required:
      - resourceType
      - id
      - url
      - version
      - name
      - status
      - description
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        url:
          minLength: 1
          type: string
        version:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        status:
          minLength: 1
          type: string
        description:
          minLength: 1
          type: string
        compose:
          $ref: '#/components/schemas/Compose'
    Contained3:
      title: Contained3
      required:
      - resourceType
      - id
      - manufacturer
      - model
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier14'
          description: ''
        type:
          $ref: '#/components/schemas/Type9'
        manufacturer:
          minLength: 1
          type: string
        model:
          minLength: 1
          type: string
    Contained4:
      title: Contained4
      required:
      - resourceType
      - id
      - status
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        _id:
          $ref: '#/components/schemas/Id'
        status:
          minLength: 1
          type: string
        code:
          $ref: '#/components/schemas/Code1'
        subject:
          $ref: '#/components/schemas/Subject4'
        performer:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Performer'
          description: ''
        valueQuantity:
          $ref: '#/components/schemas/ValueQuantity'
        referenceRange:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ReferenceRange'
          description: ''
    Contained5:
      title: Contained5
      required:
      - resourceType
      - id
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        name:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Name'
          description: ''
        practitionerRole:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PractitionerRole1'
          description: ''
    Contained6:
      title: Contained6
      required:
      - resourceType
      - id
      - description
      - mode
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        description:
          minLength: 1
          type: string
        mode:
          minLength: 1
          type: string
        physicalType:
          $ref: '#/components/schemas/PhysicalType'
    Contained7:
      title: Contained7
      required:
      - resourceType
      - id
      - status
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        status:
          minLength: 1
          type: string
        code:
          $ref: '#/components/schemas/Code5'
        subject:
          $ref: '#/components/schemas/Subject4'
        performer:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Performer3'
          description: ''
        valueCodeableConcept:
          $ref: '#/components/schemas/ValueCodeableConcept'
    Contained8:
      title: Contained8
      required:
      - resourceType
      - id
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        code:
          $ref: '#/components/schemas/Code'
    Container:
      title: Container
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Container1:
      title: Container1
      required:
      - description
      type: object
      properties:
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier44'
          description: ''
        description:
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/Type31'
        capacity:
          $ref: '#/components/schemas/Capacity'
        specimenQuantity:
          $ref: '#/components/schemas/SpecimenQuantity'
        additiveReference:
          $ref: '#/components/schemas/AdditiveReference'
    Content:
      title: Content
      type: object
      properties:
        attachment:
          $ref: '#/components/schemas/Attachment'
        format:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Format'
          description: ''
    Content1:
      title: Content1
      required:
      - url
      type: object
      properties:
        url:
          minLength: 1
          type: string
    Content2:
      title: Content2
      required:
      - id
      - contentType
      - data
      - creation
      - _creation
      type: object
      properties:
        id:
          minLength: 1
          type: string
        contentType:
          minLength: 1
          type: string
        data:
          minLength: 1
          type: string
        creation:
          minLength: 1
          type: string
        _creation:
          $ref: '#/components/schemas/Creation'
    Context:
      title: Context
      required:
      - encounter
      - event
      - period
      - facilityType
      - practiceSetting
      - sourcePatientInfo
      - related
      type: object
      properties:
        encounter:
          $ref: '#/components/schemas/Encounter1'
        event:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Event1'
          description: ''
        period:
          $ref: '#/components/schemas/Period2'
        facilityType:
          $ref: '#/components/schemas/FacilityType'
        practiceSetting:
          $ref: '#/components/schemas/PracticeSetting'
        sourcePatientInfo:
          $ref: '#/components/schemas/SourcePatientInfo'
        related:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Related'
          description: ''
    Copyright:
      title: Copyright
      required:
      - claim_comments
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
    Coverage2:
      title: Coverage2
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Coverage3:
      title: Coverage3
      required:
      - coverageReference
      type: object
      properties:
        coverageReference:
          $ref: '#/components/schemas/CoverageReference'
    Coverage4:
      title: Coverage4
      required:
      - sequence
      - focal
      type: object
      properties:
        sequence:
          type: number
        focal:
          type: boolean
        coverageReference:
          $ref: '#/components/schemas/CoverageReference'
    CoverageArea:
      title: CoverageArea
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    CoverageReference:
      title: CoverageReference
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Created:
      title: Created
      required:
      - claim_comments
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
    Creation:
      title: Creation
      required:
      - claim_comments
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
    Creator:
      title: Creator
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Criticality:
      title: Criticality
      required:
      - claim_comments
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
    Custodian:
      title: Custodian
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Custodian1:
      title: Custodian1
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    DataRequirement:
      title: DataRequirement
      required:
      - type
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        type:
          minLength: 1
          type: string
        codeFilter:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CodeFilter'
          description: ''
    DateCriterion:
      title: DateCriterion
      required:
      - value
      type: object
      properties:
        code:
          $ref: '#/components/schemas/Code5'
        value:
          minLength: 1
          type: string
    Datum:
      title: Datum
      required:
      - reference
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        reference:
          minLength: 1
          type: string
    Denominator:
      title: Denominator
      required:
      - value
      - system
      - code
      type: object
      properties:
        value:
          type: number
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Dependency:
      title: Dependency
      required:
      - type
      - uri
      type: object
      properties:
        type:
          minLength: 1
          type: string
        uri:
          minLength: 1
          type: string
        _uri:
          $ref: '#/components/schemas/Uri'
    Designation:
      title: Designation
      required:
      - value
      type: object
      properties:
        use:
          $ref: '#/components/schemas/Use'
        value:
          minLength: 1
          type: string
    Destination:
      title: Destination
      required:
      - name
      - endpoint
      type: object
      properties:
        name:
          minLength: 1
          type: string
        target:
          $ref: '#/components/schemas/Target2'
        endpoint:
          minLength: 1
          type: string
    Detail:
      title: Detail
      required:
      - category
      - code
      - prohibited
      - scheduledTiming
      - performer
      type: object
      properties:
        category:
          $ref: '#/components/schemas/Category1'
        code:
          $ref: '#/components/schemas/Code2'
        prohibited:
          type: boolean
        scheduledTiming:
          $ref: '#/components/schemas/ScheduledTiming'
        performer:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Performer'
          description: ''
    Detail1:
      title: Detail1
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Detail3:
      title: Detail3
      required:
      - date
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        type:
          $ref: '#/components/schemas/Type3'
        requestReference:
          $ref: '#/components/schemas/RequestReference'
        date:
          minLength: 1
          type: string
        amount:
          $ref: '#/components/schemas/Amount'
    Details:
      title: Details
      required:
      - text
      type: object
      properties:
        text:
          minLength: 1
          type: string
    Display:
      title: Display
      required:
      - claim_comments
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
    DocStatus:
      title: DocStatus
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Document:
      title: Document
      required:
      - claim_comments
      - contentType
      - url
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        contentType:
          minLength: 1
          type: string
        url:
          minLength: 1
          type: string
    During:
      title: During
      required:
      - start
      - end
      type: object
      properties:
        start:
          minLength: 1
          type: string
        end:
          minLength: 1
          type: string
    EffectiveTimePeriod:
      title: EffectiveTimePeriod
      required:
      - start
      - end
      type: object
      properties:
        start:
          minLength: 1
          type: string
        end:
          minLength: 1
          type: string
    Element:
      title: Element
      required:
      - system
      - code
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
        target:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Target'
          description: ''
    Element1:
      title: Element1
      required:
      - path
      - definition
      - maxLength
      type: object
      properties:
        extension:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Extension3'
          description: ''
        path:
          minLength: 1
          type: string
        definition:
          minLength: 1
          type: string
        type:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Type6'
          description: ''
        maxLength:
          type: number
        binding:
          $ref: '#/components/schemas/Binding'
    Element2:
      title: Element2
      required:
      - path
      - name
      - short
      - definition
      - comments
      - min
      - max
      - isModifier
      type: object
      properties:
        path:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        short:
          minLength: 1
          type: string
        definition:
          minLength: 1
          type: string
        comments:
          minLength: 1
          type: string
        min:
          type: number
        max:
          minLength: 1
          type: string
        base:
          $ref: '#/components/schemas/Base1'
        type:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Type6'
          description: ''
        isModifier:
          type: boolean
    Eligibility:
      title: Eligibility
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding57'
          description: ''
    Enterer:
      title: Enterer
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Entity:
      title: Entity
      required:
      - name
      type: object
      properties:
        identifier:
          $ref: '#/components/schemas/Identifier2'
        type:
          $ref: '#/components/schemas/Type2'
        role:
          $ref: '#/components/schemas/Role1'
        lifecycle:
          $ref: '#/components/schemas/Lifecycle'
        name:
          minLength: 1
          type: string
    Entity1:
      title: Entity1
      required:
      - role
      - reference
      - display
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        role:
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/Type28'
        reference:
          minLength: 1
          type: string
        _reference:
          $ref: '#/components/schemas/Reference'
        display:
          minLength: 1
          type: string
    Entry:
      title: Entry
      required:
      - fullUrl
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        fullUrl:
          minLength: 1
          type: string
        resource:
          $ref: '#/components/schemas/Resource'
        search:
          $ref: '#/components/schemas/Search'
    Entry1:
      title: Entry1
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Entry2:
      title: Entry2
      required:
      - deleted
      type: object
      properties:
        flag:
          $ref: '#/components/schemas/Flag1'
        deleted:
          type: boolean
        item:
          $ref: '#/components/schemas/Item6'
    Event:
      title: Event
      type: object
      properties:
        code:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Code4'
          description: ''
        period:
          $ref: '#/components/schemas/Period2'
        detail:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Detail1'
          description: ''
    Event1:
      title: Event1
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Event2:
      title: Event2
      required:
      - system
      - code
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    ExampleFor:
      title: ExampleFor
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Explanation:
      title: Explanation
      required:
      - reason
      type: object
      properties:
        reason:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Reason'
          description: ''
    Extension:
      title: Extension
      required:
      - url
      type: object
      properties:
        url:
          minLength: 1
          type: string
        valueReference:
          $ref: '#/components/schemas/ValueReference'
    Extension1:
      title: Extension1
      required:
      - url
      type: object
      properties:
        extension:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Extension2'
          description: ''
        url:
          minLength: 1
          type: string
    Extension2:
      title: Extension2
      required:
      - url
      type: object
      properties:
        url:
          minLength: 1
          type: string
        valueCodeableConcept:
          $ref: '#/components/schemas/ValueCodeableConcept'
    Extension3:
      title: Extension3
      required:
      - url
      - valueInteger
      type: object
      properties:
        url:
          minLength: 1
          type: string
        valueInteger:
          type: number
    Extension4:
      title: Extension4
      required:
      - url
      type: object
      properties:
        url:
          minLength: 1
          type: string
        valueReference:
          $ref: '#/components/schemas/ValueReference1'
    Extension7:
      title: Extension7
      required:
      - url
      - valueString
      type: object
      properties:
        url:
          minLength: 1
          type: string
        valueString:
          minLength: 1
          type: string
    Extension8:
      title: Extension8
      required:
      - url
      - valueString
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        url:
          minLength: 1
          type: string
        valueString:
          minLength: 1
          type: string
    Finding:
      title: Finding
      type: object
      properties:
        item:
          $ref: '#/components/schemas/Item3'
    Fixture:
      title: Fixture
      required:
      - id
      - autocreate
      - autodelete
      type: object
      properties:
        id:
          minLength: 1
          type: string
        autocreate:
          type: boolean
        autodelete:
          type: boolean
        resource:
          $ref: '#/components/schemas/Resource2'
    Flag1:
      title: Flag1
      required:
      - text
      type: object
      properties:
        text:
          minLength: 1
          type: string
    ForecastStatus:
      title: ForecastStatus
      required:
      - text
      type: object
      properties:
        text:
          minLength: 1
          type: string
    Format:
      title: Format
      required:
      - system
      - code
      - display
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Frames:
      title: Frames
      required:
      - claim_comments
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
    Gender:
      title: Gender
      required:
      - claim_comments
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
    Global:
      title: Global
      required:
      - type
      type: object
      properties:
        type:
          minLength: 1
          type: string
        _type:
          $ref: '#/components/schemas/Type'
        profile:
          $ref: '#/components/schemas/Profile'
    Goal2:
      title: Goal2
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Group1:
      title: Group1
      required:
      - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
        input:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Input'
          description: ''
        rule:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Rule'
          description: ''
    High:
      title: High
      required:
      - value
      - unit
      - system
      - code
      type: object
      properties:
        value:
          type: number
        unit:
          minLength: 1
          type: string
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Id:
      title: Id
      required:
      - claim_comments
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
    Identifier:
      title: Identifier
      required:
      - system
      - value
      type: object
      properties:
        system:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
    Identifier1:
      title: Identifier1
      required:
      - value
      type: object
      properties:
        value:
          minLength: 1
          type: string
    Identifier2:
      title: Identifier2
      required:
      - type
      - value
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type4'
        value:
          minLength: 1
          type: string
    Identifier3:
      title: Identifier3
      required:
      - use
      - system
      - value
      type: object
      properties:
        use:
          minLength: 1
          type: string
        system:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
    Identifier6:
      title: Identifier6
      required:
      - claim_comments
      - system
      - value
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        system:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
    Identifier7:
      title: Identifier7
      required:
      - system
      - value
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        type:
          $ref: '#/components/schemas/Type8'
        system:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
    Identifier10:
      title: Identifier10
      required:
      - use
      - system
      - value
      type: object
      properties:
        use:
          type: number
        system:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
    Identifier14:
      title: Identifier14
      required:
      - system
      - value
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type8'
        system:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
    Identifier15:
      title: Identifier15
      required:
      - type
      - value
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type8'
        value:
          minLength: 1
          type: string
    Identifier28:
      title: Identifier28
      required:
      - use
      - value
      type: object
      properties:
        use:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
    Identifier32:
      title: Identifier32
      required:
      - use
      - system
      - value
      type: object
      properties:
        use:
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/Type24'
        system:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
    Identifier35:
      title: Identifier35
      required:
      - use
      - system
      - value
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        use:
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/Type24'
        system:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
        period:
          $ref: '#/components/schemas/Period3'
        assigner:
          $ref: '#/components/schemas/Assigner'
    Identifier43:
      title: Identifier43
      required:
      - system
      - value
      type: object
      properties:
        system:
          minLength: 1
          type: string
        _system:
          $ref: '#/components/schemas/System'
        value:
          minLength: 1
          type: string
    Identifier44:
      title: Identifier44
      required:
      - value
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        value:
          minLength: 1
          type: string
        _value:
          $ref: '#/components/schemas/Value'
    Image:
      title: Image
      required:
      - contentType
      - data
      - title
      type: object
      properties:
        contentType:
          minLength: 1
          type: string
        data:
          minLength: 1
          type: string
        title:
          minLength: 1
          type: string
    Implicated:
      title: Implicated
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Include:
      title: Include
      required:
      - system
      type: object
      properties:
        system:
          minLength: 1
          type: string
        concept:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Concept1'
          description: ''
    Include1:
      title: Include1
      required:
      - system
      - version
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        system:
          minLength: 1
          type: string
        version:
          minLength: 1
          type: string
        concept:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Concept6'
          description: ''
    Inforce:
      title: Inforce
      required:
      - claim_comments
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
    InformationSource:
      title: InformationSource
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Input:
      title: Input
      required:
      - name
      - mode
      type: object
      properties:
        name:
          minLength: 1
          type: string
        mode:
          minLength: 1
          type: string
    Instance:
      title: Instance
      required:
      - uid
      - number
      - sopClass
      type: object
      properties:
        uid:
          minLength: 1
          type: string
        number:
          type: number
        sopClass:
          minLength: 1
          type: string
        content:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Content1'
          description: ''
    Instruction:
      title: Instruction
      required:
      - claim_comments
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
    Investigation:
      title: Investigation
      type: object
      properties:
        code:
          $ref: '#/components/schemas/Code2'
        item:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Item2'
          description: ''
    Issue:
      title: Issue
      required:
      - severity
      - code
      - diagnostics
      type: object
      properties:
        severity:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
        details:
          $ref: '#/components/schemas/Details'
        diagnostics:
          minLength: 1
          type: string
        location:
          type: array
          items:
            type: object
          description: ''
    Issued:
      title: Issued
      required:
      - claim_comments
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
    Issuer:
      title: Issuer
      required:
      - display
      type: object
      properties:
        display:
          minLength: 1
          type: string
    IssuerReference:
      title: IssuerReference
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Item:
      title: Item
      required:
      - sequence
      - servicedDate
      type: object
      properties:
        sequence:
          type: number
        type:
          $ref: '#/components/schemas/Type6'
        providerReference:
          $ref: '#/components/schemas/ProviderReference'
        service:
          $ref: '#/components/schemas/Service'
        servicedDate:
          minLength: 1
          type: string
        unitPrice:
          $ref: '#/components/schemas/UnitPrice'
        net:
          $ref: '#/components/schemas/Net'
    Item1:
      title: Item1
      required:
      - sequenceLinkId
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        sequenceLinkId:
          type: number
        adjudication:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Adjudication'
          description: ''
    Item2:
      title: Item2
      required:
      - display
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        display:
          minLength: 1
          type: string
    Item3:
      title: Item3
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding8'
          description: ''
    Item4:
      title: Item4
      required:
      - sequence
      - servicedDate
      type: object
      properties:
        sequence:
          type: number
        type:
          $ref: '#/components/schemas/Type6'
        providerReference:
          $ref: '#/components/schemas/ProviderReference'
        service:
          $ref: '#/components/schemas/Service1'
        servicedDate:
          minLength: 1
          type: string
        unitPrice:
          $ref: '#/components/schemas/UnitPrice'
        net:
          $ref: '#/components/schemas/Net'
        adjudication:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Adjudication'
          description: ''
    Item5:
      title: Item5
      required:
      - type
      type: object
      properties:
        type:
          minLength: 1
          type: string
        resource:
          $ref: '#/components/schemas/Resource2'
    Item6:
      title: Item6
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Item7:
      title: Item7
      required:
      - linkId
      - type
      type: object
      properties:
        linkId:
          minLength: 1
          type: string
        concept:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Concept2'
          description: ''
        type:
          minLength: 1
          type: string
        item:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Item8'
          description: ''
    Item8:
      title: Item8
      required:
      - linkId
      - type
      type: object
      properties:
        linkId:
          minLength: 1
          type: string
        concept:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Concept2'
          description: ''
        type:
          minLength: 1
          type: string
        options:
          $ref: '#/components/schemas/Options'
        item:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Item9'
          description: ''
    Item9:
      title: Item9
      required:
      - linkId
      - type
      type: object
      properties:
        linkId:
          minLength: 1
          type: string
        concept:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Concept2'
          description: ''
        type:
          minLength: 1
          type: string
        item:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Item10'
          description: ''
    Item10:
      title: Item10
      required:
      - linkId
      - type
      type: object
      properties:
        linkId:
          minLength: 1
          type: string
        concept:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Concept2'
          description: ''
        type:
          minLength: 1
          type: string
        options:
          $ref: '#/components/schemas/Options'
    Item11:
      title: Item11
      type: object
      properties:
        item:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Item12'
          description: ''
    Item12:
      title: Item12
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        answer:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Answer'
          description: ''
    Item13:
      title: Item13
      type: object
      properties:
        item:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Item14'
          description: ''
    Item14:
      title: Item14
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        answer:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Answer1'
          description: ''
    LanguageCode:
      title: LanguageCode
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding8'
          description: ''
    Lifecycle:
      title: Lifecycle
      required:
      - system
      - code
      - display
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Link:
      title: Link
      required:
      - relation
      - url
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        relation:
          minLength: 1
          type: string
        url:
          minLength: 1
          type: string
    Link1:
      title: Link1
      required:
      - type
      type: object
      properties:
        other:
          $ref: '#/components/schemas/Other'
        type:
          minLength: 1
          type: string
    Link2:
      title: Link2
      type: object
      properties:
        target:
          $ref: '#/components/schemas/Target3'
    Location1:
      title: Location1
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Location3:
      title: Location3
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    LockedDate:
      title: LockedDate
      required:
      - claim_comments
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
    Low:
      title: Low
      required:
      - value
      - unit
      - system
      - code
      type: object
      properties:
        value:
          type: number
        unit:
          minLength: 1
          type: string
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    MasterIdentifier:
      title: MasterIdentifier
      required:
      - system
      - value
      type: object
      properties:
        system:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
    Member:
      title: Member
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Meta:
      title: Meta
      required:
      - claim_comments
      - lastUpdated
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        lastUpdated:
          minLength: 1
          type: string
    Meta1:
      title: Meta1
      required:
      - profile
      type: object
      properties:
        profile:
          type: array
          items:
            type: object
          description: ''
    Meta2:
      title: Meta2
      required:
      - versionId
      type: object
      properties:
        versionId:
          minLength: 1
          type: string
    Meta3:
      title: Meta3
      required:
      - profile
      - _profile
      type: object
      properties:
        profile:
          type: array
          items:
            type: object
          description: ''
        _profile:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Profile2'
          description: ''
    Metadata:
      title: Metadata
      required:
      - capability
      type: object
      properties:
        capability:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Capability'
          description: ''
    Method:
      title: Method
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding27'
          description: ''
    Method1:
      title: Method1
      required:
      - claim_comments
      - coding
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding8'
          description: ''
    Mitigation:
      title: Mitigation
      required:
      - date
      type: object
      properties:
        action:
          $ref: '#/components/schemas/Action'
        date:
          minLength: 1
          type: string
        author:
          $ref: '#/components/schemas/Author1'
    Modality:
      title: Modality
      required:
      - system
      - code
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Mode:
      title: Mode
      required:
      - claim_comments
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
    Model:
      title: Model
      required:
      - identifier
      type: object
      properties:
        identifier:
          minLength: 1
          type: string
    Modifier:
      title: Modifier
      required:
      - text
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
        text:
          minLength: 1
          type: string
    Modifier1:
      title: Modifier1
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    ModifierExtension:
      title: ModifierExtension
      required:
      - url
      type: object
      properties:
        url:
          minLength: 1
          type: string
        valueCodeableConcept:
          $ref: '#/components/schemas/ValueCodeableConcept'
    Module:
      title: Module
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    ModuleMetadata:
      title: ModuleMetadata
      required:
      - identifier
      - version
      - title
      - type
      - status
      - description
      - publicationDate
      - topic
      type: object
      properties:
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier28'
          description: ''
        version:
          minLength: 1
          type: string
        title:
          minLength: 1
          type: string
        type:
          minLength: 1
          type: string
        status:
          minLength: 1
          type: string
        description:
          minLength: 1
          type: string
        publicationDate:
          minLength: 1
          type: string
        topic:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Topic'
          description: ''
    Name:
      title: Name
      type: object
      properties:
        family:
          type: array
          items:
            type: object
          description: ''
        given:
          type: array
          items:
            type: object
          description: ''
    Name1:
      title: Name1
      required:
      - claim_comments
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
    Name3:
      title: Name3
      required:
      - use
      type: object
      properties:
        use:
          minLength: 1
          type: string
        family:
          type: array
          items:
            type: object
          description: ''
        given:
          type: array
          items:
            type: object
          description: ''
    Name4:
      title: Name4
      required:
      - use
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        use:
          minLength: 1
          type: string
        family:
          type: array
          items:
            type: object
          description: ''
        given:
          type: array
          items:
            type: object
          description: ''
    Name5:
      title: Name5
      type: object
      properties:
        family:
          type: array
          items:
            type: object
          description: ''
        given:
          type: array
          items:
            type: object
          description: ''
        prefix:
          type: array
          items:
            type: object
          description: ''
    Name6:
      title: Name6
      required:
      - use
      - family
      - given
      type: object
      properties:
        use:
          minLength: 1
          type: string
        family:
          type: array
          items:
            type: object
          description: ''
        given:
          type: array
          items:
            type: object
          description: ''
    Net:
      title: Net
      required:
      - value
      - system
      - code
      type: object
      properties:
        value:
          type: number
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Network:
      title: Network
      required:
      - address
      - type
      type: object
      properties:
        address:
          minLength: 1
          type: string
        type:
          minLength: 1
          type: string
    NotAvailable:
      title: NotAvailable
      required:
      - description
      type: object
      properties:
        description:
          minLength: 1
          type: string
        during:
          $ref: '#/components/schemas/During'
    Note:
      title: Note
      required:
      - text
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        text:
          minLength: 1
          type: string
    Note1:
      title: Note1
      required:
      - time
      - text
      type: object
      properties:
        authorReference:
          $ref: '#/components/schemas/AuthorReference'
        time:
          minLength: 1
          type: string
        text:
          minLength: 1
          type: string
    Note2:
      title: Note2
      required:
      - text
      type: object
      properties:
        text:
          minLength: 1
          type: string
    Numerator:
      title: Numerator
      required:
      - value
      - unit
      - system
      - code
      type: object
      properties:
        value:
          type: number
        unit:
          minLength: 1
          type: string
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Options:
      title: Options
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Orderer:
      title: Orderer
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Other:
      title: Other
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Outcome:
      title: Outcome
      required:
      - claim_comments
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
    Outcome1:
      title: Outcome1
      required:
      - system
      - code
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Outcome2:
      title: Outcome2
      required:
      - text
      type: object
      properties:
        text:
          minLength: 1
          type: string
    Owner:
      title: Owner
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Package:
      title: Package
      required:
      - name
      - description
      type: object
      properties:
        name:
          minLength: 1
          type: string
        description:
          minLength: 1
          type: string
        resource:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Resource1'
          description: ''
    Package1:
      title: Package1
      required:
      - claim_comments
      - container
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        container:
          $ref: '#/components/schemas/Container'
    Page:
      title: Page
      required:
      - source
      - name
      - kind
      - page
      type: object
      properties:
        source:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        kind:
          minLength: 1
          type: string
        page:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Page1'
          description: ''
    Page1:
      title: Page1
      required:
      - source
      - name
      - kind
      - format
      type: object
      properties:
        source:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        kind:
          minLength: 1
          type: string
        type:
          type: array
          items:
            type: object
          description: ''
        package:
          type: array
          items:
            type: object
          description: ''
        format:
          minLength: 1
          type: string
    Parameter:
      title: Parameter
      required:
      - name
      - use
      - min
      - max
      - documentation
      - type
      type: object
      properties:
        name:
          minLength: 1
          type: string
        use:
          minLength: 1
          type: string
        min:
          type: number
        max:
          minLength: 1
          type: string
        documentation:
          minLength: 1
          type: string
        type:
          minLength: 1
          type: string
    Parameter1:
      title: Parameter1
      required:
      - name
      - valueDate
      type: object
      properties:
        name:
          minLength: 1
          type: string
        valueDate:
          minLength: 1
          type: string
    Participant:
      title: Participant
      required:
      - required
      - status
      type: object
      properties:
        type:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Type1'
          description: ''
        actor:
          $ref: '#/components/schemas/Actor'
        required:
          minLength: 1
          type: string
        status:
          minLength: 1
          type: string
    Participant1:
      title: Participant1
      type: object
      properties:
        role:
          $ref: '#/components/schemas/Role'
        member:
          $ref: '#/components/schemas/Member'
    Party:
      title: Party
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Payee:
      title: Payee
      required:
      - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type6'
    PayeeType:
      title: PayeeType
      required:
      - system
      - code
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Payload:
      title: Payload
      required:
      - contentString
      type: object
      properties:
        contentString:
          minLength: 1
          type: string
    PaymentAmount:
      title: PaymentAmount
      required:
      - value
      - system
      - code
      type: object
      properties:
        value:
          type: number
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    PaymentDate:
      title: PaymentDate
      required:
      - claim_comments
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
    PaymentRef:
      title: PaymentRef
      required:
      - system
      - value
      type: object
      properties:
        system:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
    PaymentStatus:
      title: PaymentStatus
      required:
      - system
      - code
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Period:
      title: Period
      required:
      - end
      type: object
      properties:
        end:
          minLength: 1
          type: string
    Period2:
      title: Period2
      required:
      - start
      - end
      type: object
      properties:
        start:
          minLength: 1
          type: string
        end:
          minLength: 1
          type: string
    Period3:
      title: Period3
      required:
      - start
      type: object
      properties:
        start:
          minLength: 1
          type: string
    Photo:
      title: Photo
      required:
      - contentType
      - data
      type: object
      properties:
        contentType:
          minLength: 1
          type: string
        data:
          minLength: 1
          type: string
    Photo1:
      title: Photo1
      required:
      - contentType
      - url
      type: object
      properties:
        contentType:
          minLength: 1
          type: string
        url:
          minLength: 1
          type: string
    Plan:
      title: Plan
      required:
      - display
      type: object
      properties:
        display:
          minLength: 1
          type: string
        _display:
          $ref: '#/components/schemas/Display'
    PlanholderReference:
      title: PlanholderReference
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    PlanningHorizon:
      title: PlanningHorizon
      required:
      - start
      - end
      type: object
      properties:
        start:
          minLength: 1
          type: string
        end:
          minLength: 1
          type: string
    Policy:
      title: Policy
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
    Position:
      title: Position
      required:
      - longitude
      - latitude
      - altitude
      type: object
      properties:
        longitude:
          type: number
        latitude:
          type: number
        altitude:
          type: number
    Prediction:
      title: Prediction
      required:
      - probabilityDecimal
      type: object
      properties:
        outcome:
          $ref: '#/components/schemas/Outcome2'
        probabilityDecimal:
          type: number
        whenRange:
          $ref: '#/components/schemas/WhenRange'
    PresentedForm:
      title: PresentedForm
      required:
      - contentType
      - language
      - data
      - title
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        contentType:
          minLength: 1
          type: string
        language:
          minLength: 1
          type: string
        data:
          minLength: 1
          type: string
        title:
          minLength: 1
          type: string
    Priority:
      title: Priority
      required:
      - code
      type: object
      properties:
        code:
          minLength: 1
          type: string
    Priority2:
      title: Priority2
      required:
      - claim_comments
      - coding
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Problem:
      title: Problem
      required:
      - display
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        display:
          minLength: 1
          type: string
    Product:
      title: Product
      required:
      - system
      - code
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Profile:
      title: Profile
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Profile1:
      title: Profile1
      required:
      - id
      - reference
      type: object
      properties:
        id:
          minLength: 1
          type: string
        reference:
          minLength: 1
          type: string
    Profile2:
      title: Profile2
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
    Protocol:
      title: Protocol
      required:
      - doseSequence
      - description
      - authority
      - series
      type: object
      properties:
        doseSequence:
          type: number
        description:
          minLength: 1
          type: string
        authority:
          $ref: '#/components/schemas/Authority'
        series:
          minLength: 1
          type: string
    Purpose:
      title: Purpose
      required:
      - code
      - display
      type: object
      properties:
        code:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Qualification:
      title: Qualification
      type: object
      properties:
        identifier:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: ''
        code:
          $ref: '#/components/schemas/Code2'
        period:
          $ref: '#/components/schemas/Period3'
        issuer:
          $ref: '#/components/schemas/Issuer'
    Quantity:
      title: Quantity
      required:
      - value
      - system
      - code
      type: object
      properties:
        value:
          type: number
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Quantity1:
      title: Quantity1
      required:
      - value
      - unit
      - system
      - code
      type: object
      properties:
        value:
          type: number
        unit:
          minLength: 1
          type: string
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Quantity2:
      title: Quantity2
      required:
      - claim_comments
      - value
      - unit
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        value:
          type: number
        unit:
          minLength: 1
          type: string
    QuantityQuantity:
      title: QuantityQuantity
      required:
      - value
      type: object
      properties:
        value:
          type: number
    Reason:
      title: Reason
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding8'
          description: ''
    Reason1:
      title: Reason1
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding8'
          description: ''
    Reason2:
      title: Reason2
      required:
      - system
      - code
      - display
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Reason3:
      title: Reason3
      required:
      - text
      type: object
      properties:
        text:
          minLength: 1
          type: string
    Recipient:
      title: Recipient
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Recipient1:
      title: Recipient1
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Recorder:
      title: Recorder
      required:
      - claim_comments
      - reference
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        reference:
          minLength: 1
          type: string
    Ref:
      title: Ref
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Reference:
      title: Reference
      required:
      - claim_comments
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
    ReferenceRange:
      title: ReferenceRange
      type: object
      properties:
        low:
          $ref: '#/components/schemas/Low'
        high:
          $ref: '#/components/schemas/High'
    ReferenceSeq:
      title: ReferenceSeq
      required:
      - windowStart
      - windowEnd
      type: object
      properties:
        referenceSeqId:
          $ref: '#/components/schemas/ReferenceSeqId'
        windowStart:
          type: number
        windowEnd:
          type: number
    ReferenceSeqId:
      title: ReferenceSeqId
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding8'
          description: ''
    Related:
      title: Related
      type: object
      properties:
        identifier:
          $ref: '#/components/schemas/Identifier'
        ref:
          $ref: '#/components/schemas/Ref'
    RelatedAgent:
      title: RelatedAgent
      required:
      - target
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type8'
        target:
          minLength: 1
          type: string
    RelatesTo:
      title: RelatesTo
      required:
      - code
      type: object
      properties:
        code:
          minLength: 1
          type: string
        target:
          $ref: '#/components/schemas/Target1'
    Repeat:
      title: Repeat
      required:
      - frequency
      - period
      - periodUnit
      type: object
      properties:
        frequency:
          type: number
        period:
          type: number
        periodUnit:
          minLength: 1
          type: string
    Reporter:
      title: Reporter
      required:
      - claim_comments
      - reference
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        reference:
          minLength: 1
          type: string
    Repository:
      title: Repository
      required:
      - url
      - name
      - variantId
      type: object
      properties:
        url:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        variantId:
          minLength: 1
          type: string
    Request:
      title: Request
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Requester:
      title: Requester
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Requester1:
      title: Requester1
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    RequestOrganization:
      title: RequestOrganization
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    RequestReference:
      title: RequestReference
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Requirements:
      title: Requirements
      required:
      - claim_comments
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
    Resource:
      title: Resource
      required:
      - resourceType
      - id
      - text
      - medicationReference
      - patient
      type: object
      properties:
        resourceType:
          minLength: 1
          type: string
        id:
          minLength: 1
          type: string
        text:
          $ref: '#/components/schemas/Text1'
        medicationReference:
          $ref: '#/components/schemas/MedicationReference'
        patient:
          $ref: '#/components/schemas/Patient1'
    Resource1:
      title: Resource1
      required:
      - example
      - name
      - description
      - acronym
      - sourceUri
      type: object
      properties:
        example:
          type: boolean
        name:
          minLength: 1
          type: string
        description:
          minLength: 1
          type: string
        acronym:
          minLength: 1
          type: string
        _acronym:
          $ref: '#/components/schemas/Acronym'
        sourceUri:
          minLength: 1
          type: string
        exampleFor:
          $ref: '#/components/schemas/ExampleFor'
    Resource2:
      title: Resource2
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Response:
      title: Response
      required:
      - identifier
      - code
      type: object
      properties:
        identifier:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Responsible:
      title: Responsible
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Result:
      title: Result
      required:
      - reference
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        reference:
          minLength: 1
          type: string
    Role:
      title: Role
      required:
      - text
      type: object
      properties:
        text:
          minLength: 1
          type: string
    Role1:
      title: Role1
      required:
      - system
      - code
      - display
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Role5:
      title: Role5
      required:
      - claim_comments
      - coding
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding8'
          description: ''
    Role6:
      title: Role6
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding8'
          description: ''
    Role7:
      title: Role7
      required:
      - system
      - code
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Route:
      title: Route
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Rule:
      title: Rule
      required:
      - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
        source:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Source4'
          description: ''
    Schedule1:
      title: Schedule1
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    ScheduledTiming:
      title: ScheduledTiming
      required:
      - repeat
      type: object
      properties:
        repeat:
          $ref: '#/components/schemas/Repeat'
    Score:
      title: Score
      required:
      - claim_comments
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
    Search:
      title: Search
      required:
      - claim_comments
      - mode
      - _mode
      - score
      - _score
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        mode:
          minLength: 1
          type: string
        _mode:
          $ref: '#/components/schemas/Mode'
        score:
          type: number
        _score:
          $ref: '#/components/schemas/Score'
    Section:
      title: Section
      required:
      - title
      - mode
      type: object
      properties:
        title:
          minLength: 1
          type: string
        code:
          $ref: '#/components/schemas/Code5'
        text:
          $ref: '#/components/schemas/Text'
        mode:
          minLength: 1
          type: string
        orderedBy:
          $ref: '#/components/schemas/OrderedBy'
        entry:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Entry1'
          description: ''
    SecurityLabel:
      title: SecurityLabel
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Sender:
      title: Sender
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Series:
      title: Series
      required:
      - uid
      - number
      - description
      - numberOfInstances
      type: object
      properties:
        uid:
          minLength: 1
          type: string
        number:
          type: number
        modality:
          $ref: '#/components/schemas/Modality'
        description:
          minLength: 1
          type: string
        numberOfInstances:
          type: number
        bodySite:
          $ref: '#/components/schemas/BodySite2'
        instance:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Instance'
          description: ''
    Service:
      title: Service
      required:
      - code
      type: object
      properties:
        code:
          minLength: 1
          type: string
    Service1:
      title: Service1
      required:
      - system
      - code
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    ServiceCategory:
      title: ServiceCategory
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    ServiceCategory1:
      title: ServiceCategory1
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding5'
          description: ''
    ServiceRequested:
      title: ServiceRequested
      required:
      - text
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
        text:
          minLength: 1
          type: string
    ServiceType:
      title: ServiceType
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding5'
          description: ''
    ServiceType1:
      title: ServiceType1
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Setup:
      title: Setup
      required:
      - action
      type: object
      properties:
        action:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Action1'
          description: ''
    Severity:
      title: Severity
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Site:
      title: Site
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    SiteCodeableConcept:
      title: SiteCodeableConcept
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Snapshot:
      title: Snapshot
      required:
      - element
      type: object
      properties:
        element:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Element2'
          description: ''
    Source:
      title: Source
      required:
      - site
      - identifier
      - type
      type: object
      properties:
        site:
          minLength: 1
          type: string
        identifier:
          $ref: '#/components/schemas/Identifier1'
        type:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Type3'
          description: ''
    Source1:
      title: Source1
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Source3:
      title: Source3
      required:
      - name
      - software
      - version
      - contact
      - endpoint
      type: object
      properties:
        name:
          minLength: 1
          type: string
        software:
          minLength: 1
          type: string
        version:
          minLength: 1
          type: string
        contact:
          $ref: '#/components/schemas/Contact2'
        endpoint:
          minLength: 1
          type: string
    Source4:
      title: Source4
      required:
      - required
      - context
      - contextType
      - element
      - variable
      type: object
      properties:
        required:
          type: boolean
        context:
          minLength: 1
          type: string
        contextType:
          minLength: 1
          type: string
        element:
          minLength: 1
          type: string
        variable:
          minLength: 1
          type: string
    SourcePatientInfo:
      title: SourcePatientInfo
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    SourceReference:
      title: SourceReference
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Specialty:
      title: Specialty
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Specialty1:
      title: Specialty1
      required:
      - text
      type: object
      properties:
        text:
          minLength: 1
          type: string
    Specialty4:
      title: Specialty4
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Specialty5:
      title: Specialty5
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding5'
          description: ''
    Status:
      title: Status
      required:
      - claim_comments
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
    StatusHistory:
      title: StatusHistory
      required:
      - status
      type: object
      properties:
        status:
          minLength: 1
          type: string
        period:
          $ref: '#/components/schemas/Period2'
    Subject:
      title: Subject
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Subject4:
      title: Subject4
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Subject5:
      title: Subject5
      required:
      - claim_comments
      - reference
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        reference:
          minLength: 1
          type: string
    Substance1:
      title: Substance1
      required:
      - claim_comments
      - coding
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Subtype:
      title: Subtype
      required:
      - system
      - code
      - display
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Subtype1:
      title: Subtype1
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding8'
          description: ''
    System:
      title: System
      required:
      - claim_comments
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
    Tag:
      title: Tag
      required:
      - system
      - code
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Target:
      title: Target
      required:
      - system
      - code
      - equivalence
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
        equivalence:
          minLength: 1
          type: string
    Target1:
      title: Target1
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Target2:
      title: Target2
      required:
      - claim_comments
      - reference
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        reference:
          minLength: 1
          type: string
    Target3:
      title: Target3
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Target4:
      title: Target4
      required:
      - reference
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        reference:
          minLength: 1
          type: string
    TargetReference:
      title: TargetReference
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    Test:
      title: Test
      required:
      - id
      - name
      - description
      type: object
      properties:
        id:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        description:
          minLength: 1
          type: string
        action:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Action2'
          description: ''
    Text:
      title: Text
      required:
      - status
      - div
      type: object
      properties:
        status:
          minLength: 1
          type: string
        div:
          minLength: 1
          type: string
    Text1:
      title: Text1
      required:
      - claim_comments
      - status
      - div
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        status:
          minLength: 1
          type: string
        div:
          minLength: 1
          type: string
    Text85:
      title: Text85
      required:
      - claim_comments
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
    Timing:
      title: Timing
      required:
      - repeat
      type: object
      properties:
        repeat:
          $ref: '#/components/schemas/Repeat'
    Topic:
      title: Topic
      required:
      - text
      type: object
      properties:
        text:
          minLength: 1
          type: string
    Total:
      title: Total
      required:
      - claim_comments
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
    Total1:
      title: Total1
      required:
      - value
      - system
      - code
      type: object
      properties:
        value:
          type: number
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    TotalBenefit:
      title: TotalBenefit
      required:
      - value
      - system
      - code
      type: object
      properties:
        value:
          type: number
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    TotalCost:
      title: TotalCost
      required:
      - value
      - system
      - code
      type: object
      properties:
        value:
          type: number
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Type:
      title: Type
      required:
      - claim_comments
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
    Type1:
      title: Type1
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding8'
          description: ''
    Type2:
      title: Type2
      required:
      - system
      - code
      - display
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Type3:
      title: Type3
      required:
      - system
      - code
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    Type4:
      title: Type4
      required:
      - coding
      - text
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding8'
          description: ''
        text:
          minLength: 1
          type: string
    Type6:
      title: Type6
      required:
      - code
      type: object
      properties:
        code:
          minLength: 1
          type: string
    Type8:
      title: Type8
      required:
      - text
      type: object
      properties:
        text:
          minLength: 1
          type: string
    Type9:
      title: Type9
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Type12:
      title: Type12
      required:
      - coding
      - text
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
        text:
          minLength: 1
          type: string
    Type19:
      title: Type19
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Type23:
      title: Type23
      required:
      - text
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
        text:
          minLength: 1
          type: string
    Type24:
      title: Type24
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding8'
          description: ''
    Type28:
      title: Type28
      required:
      - claim_comments
      - system
      - code
      - display
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    Type29:
      title: Type29
      required:
      - claim_comments
      - coding
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Type30:
      title: Type30
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding24'
          description: ''
    Type31:
      title: Type31
      required:
      - text
      - _text
      type: object
      properties:
        text:
          minLength: 1
          type: string
        _text:
          $ref: '#/components/schemas/Text85'
    UniqueId:
      title: UniqueId
      required:
      - type
      - value
      - preferred
      type: object
      properties:
        type:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
        preferred:
          type: boolean
    Unit:
      title: Unit
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    Uri:
      title: Uri
      required:
      - claim_comments
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
    Url:
      title: Url
      required:
      - claim_comments
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
    Use:
      title: Use
      required:
      - system
      - code
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    UseContext:
      title: UseContext
      required:
      - text
      type: object
      properties:
        text:
          minLength: 1
          type: string
    UseContext1:
      title: UseContext1
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding28'
          description: ''
    UseContext2:
      title: UseContext2
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding8'
          description: ''
    UseContext3:
      title: UseContext3
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding115'
          description: ''
    UseContext4:
      title: UseContext4
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    UserId:
      title: UserId
      required:
      - value
      type: object
      properties:
        value:
          minLength: 1
          type: string
    UserId1:
      title: UserId1
      required:
      - claim_comments
      - system
      - value
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        system:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
    Value:
      title: Value
      required:
      - claim_comments
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
    ValueCodeableConcept:
      title: ValueCodeableConcept
      required:
      - coding
      type: object
      properties:
        coding:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Coding'
          description: ''
    ValueCodeableConcept3:
      title: ValueCodeableConcept3
      required:
      - text
      type: object
      properties:
        text:
          minLength: 1
          type: string
    ValueCoding:
      title: ValueCoding
      required:
      - system
      - code
      - display
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    ValueCoding1:
      title: ValueCoding1
      required:
      - system
      - code
      type: object
      properties:
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    ValueQuantity:
      title: ValueQuantity
      required:
      - value
      - unit
      - system
      - code
      type: object
      properties:
        value:
          type: number
        unit:
          minLength: 1
          type: string
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    ValueQuantity1:
      title: ValueQuantity1
      required:
      - claim_comments
      - value
      - unit
      - system
      - code
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
        value:
          type: number
        unit:
          minLength: 1
          type: string
        system:
          minLength: 1
          type: string
        code:
          minLength: 1
          type: string
    ValueReference:
      title: ValueReference
      required:
      - reference
      - display
      type: object
      properties:
        reference:
          minLength: 1
          type: string
        display:
          minLength: 1
          type: string
    ValueReference1:
      title: ValueReference1
      required:
      - reference
      type: object
      properties:
        reference:
          minLength: 1
          type: string
    ValueSet2:
      title: ValueSet2
      required:
      - name
      - identifier
      type: object
      properties:
        name:
          minLength: 1
          type: string
        identifier:
          minLength: 1
          type: string
    ValueSetReference:
      title: ValueSetReference
      required:
      - extension
      - reference
      type: object
      properties:
        extension:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Extension4'
          description: ''
        reference:
          minLength: 1
          type: string
    Variation:
      title: Variation
      required:
      - start
      - end
      - observedAllele
      - referenceAllele
      type: object
      properties:
        start:
          type: number
        end:
          type: number
        observedAllele:
          minLength: 1
          type: string
        referenceAllele:
          minLength: 1
          type: string
    Version:
      title: Version
      required:
      - claim_comments
      type: object
      properties:
        claim_comments:
          type: array
          items:
            type: object
          description: ''
    WhenRange:
      title: WhenRange
      required:
      - high
      type: object
      properties:
        high:
          $ref: '#/components/schemas/High'
tags:
- name: Account
- name: ActivityDefinition
- name: AdverseEvent
- name: AllergyIntolerance
- name: Appointment
- name: AppointmentResponse
- name: AuditEvent
- name: Basic
- name: Binary
- name: BodySite
- name: Bundle
- name: CapabilityStatement
- name: CarePlan
- name: CareTeam
- name: ChargeItem
- name: Claim
- name: ClaimResponse
- name: ClinicalImpression
- name: CodeSystem
- name: Communication
- name: CommunicationRequest
- name: CompartmentDefinition
- name: Composition
- name: ConceptMap
- name: Condition
- name: Consent
- name: Contract
- name: Coverage
- name: DataElement
- name: DetectedIssue
- name: Device
- name: DeviceComponent
- name: DeviceMetric
- name: DeviceRequest
- name: DeviceUseStatement
- name: DiagnosticReport
- name: DocumentManifest
- name: DocumentReference
- name: DomainResource
- name: EligibilityRequest
- name: EligibilityResponse
- name: Encounter
- name: Endpoint
- name: EnrollmentRequest
- name: EnrollmentResponse
- name: EpisodeOfCare
- name: ExpansionProfile
- name: ExplanationOfBenefit
- name: FamilyMemberHistory
- name: Flag
- name: Goal
- name: GraphDefinition
- name: Group
- name: GuidanceResponse
- name: HealthcareService
- name: ImagingManifest
- name: ImagingStudy
- name: Immunization
- name: ImmunizationRecommendation
- name: ImplementationGuide
- name: Library
- name: Linkage
- name: List
- name: Location
- name: Measure
- name: MeasureReport
- name: Media
- name: Medication
- name: MedicationAdministration
- name: MedicationDispense
- name: MedicationRequest
- name: MedicationStatement
- name: MessageDefinition
- name: MessageHeader
- name: NamingSystem
- name: NutritionOrder
- name: Observation
- name: OperationDefinition
- name: OperationOutcome
- name: Organization
- name: Parameters
- name: Patient
- name: PaymentNotice
- name: PaymentReconciliation
- name: Person
- name: PlanDefinition
- name: Practitioner
- name: PractitionerRole
- name: Procedure
- name: ProcedureRequest
- name: ProcessRequest
- name: ProcessResponse
- name: Provenance
- name: Questionnaire
- name: QuestionnaireResponse
- name: ReferralRequest
- name: RelatedPerson
- name: RequestGroup
- name: ResearchStudy
- name: ResearchSubject
- name: Resource
- name: RiskAssessment
- name: Schedule
- name: SearchParameter
- name: Sequence
- name: ServiceDefinition
- name: Slot
- name: Specimen
- name: StructureDefinition
- name: StructureMap
- name: Subscription
- name: Substance
- name: SupplyDelivery
- name: SupplyRequest
- name: Task
- name: TestReport
- name: TestScript
- name: ValueSet
- name: VisionPrescription
